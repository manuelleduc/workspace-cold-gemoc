/*
 * generated by Xtext 2.10.0
 */
grammar InternalExplicitOperations;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.mleduc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.mleduc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.mleduc.services.ExplicitOperationsGrammarAccess;

}

@parser::members {

 	private ExplicitOperationsGrammarAccess grammarAccess;

    public InternalExplicitOperationsParser(TokenStream input, ExplicitOperationsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ExplicitOperationsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_2_0_0());
					}
					lv_languages_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"languages",
							lv_languages_2_0,
							"fr.mleduc.ExplicitOperations.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_2_1_0());
					}
					lv_operations_3_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"operations",
							lv_operations_3_0,
							"fr.mleduc.ExplicitOperations.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getArtifactsArtifactParserRuleCall_2_2_0());
					}
					lv_artifacts_4_0=ruleArtifact
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"artifacts",
							lv_artifacts_4_0,
							"fr.mleduc.ExplicitOperations.Artifact");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getCompositionsCompositionParserRuleCall_2_3_0());
					}
					lv_compositions_5_0=ruleComposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"compositions",
							lv_compositions_5_0,
							"fr.mleduc.ExplicitOperations.Composition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFeatureModelsFeatureModelParserRuleCall_2_4_0());
					}
					lv_featureModels_6_0=ruleFeatureModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"featureModels",
							lv_featureModels_6_0,
							"fr.mleduc.ExplicitOperations.FeatureModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFeatureModel
entryRuleFeatureModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureModelRule()); }
	iv_ruleFeatureModel=ruleFeatureModel
	{ $current=$iv_ruleFeatureModel.current; }
	EOF;

// Rule FeatureModel
ruleFeatureModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FM'
		{
			newLeafNode(otherlv_0, grammarAccess.getFeatureModelAccess().getFMKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFeatureModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureModelAccess().getFeatureFeatureParserRuleCall_2_0());
				}
				lv_feature_2_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureModelRule());
					}
					set(
						$current,
						"feature",
						lv_feature_2_0,
						"fr.mleduc.ExplicitOperations.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getAtomicFeatureParserRuleCall_0());
		}
		this_AtomicFeature_0=ruleAtomicFeature
		{
			$current = $this_AtomicFeature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getOneOfParserRuleCall_1());
		}
		this_OneOf_1=ruleOneOf
		{
			$current = $this_OneOf_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getSomeOfParserRuleCall_2());
		}
		this_SomeOf_2=ruleSomeOf
		{
			$current = $this_SomeOf_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomicFeature
entryRuleAtomicFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicFeatureRule()); }
	iv_ruleAtomicFeature=ruleAtomicFeature
	{ $current=$iv_ruleAtomicFeature.current; }
	EOF;

// Rule AtomicFeature
ruleAtomicFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAtomicFeatureAccess().getAtomicFeatureAction_0(),
					$current);
			}
		)
		(
			(
				lv_optional_1_0='?'
				{
					newLeafNode(lv_optional_1_0, grammarAccess.getAtomicFeatureAccess().getOptionalQuestionMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicFeatureRule());
					}
					setWithLastConsumed($current, "optional", true, "?");
				}
			)
		)?
		otherlv_2='feature'
		{
			newLeafNode(otherlv_2, grammarAccess.getAtomicFeatureAccess().getFeatureKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getAtomicFeatureAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicFeatureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getAtomicFeatureAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicFeatureAccess().getConstraintsPropositionParserRuleCall_4_1_0());
					}
					lv_constraints_5_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicFeatureRule());
						}
						set(
							$current,
							"constraints",
							lv_constraints_5_0,
							"fr.mleduc.ExplicitOperations.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getAtomicFeatureAccess().getRightParenthesisKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleOneOf
entryRuleOneOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneOfRule()); }
	iv_ruleOneOf=ruleOneOf
	{ $current=$iv_ruleOneOf.current; }
	EOF;

// Rule OneOf
ruleOneOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOneOfAccess().getOneOfAction_0(),
					$current);
			}
		)
		(
			(
				lv_optional_1_0='?'
				{
					newLeafNode(lv_optional_1_0, grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneOfRule());
					}
					setWithLastConsumed($current, "optional", true, "?");
				}
			)
		)?
		otherlv_2='oneOf'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneOfAccess().getOneOfKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getOneOfAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneOfRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getOneOfAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneOfAccess().getChildrenFeatureParserRuleCall_5_0());
				}
				lv_children_5_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneOfRule());
					}
					add(
						$current,
						"children",
						lv_children_5_0,
						"fr.mleduc.ExplicitOperations.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getOneOfAccess().getRightSquareBracketKeyword_6());
		}
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getOneOfAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOneOfAccess().getConstraintsPropositionParserRuleCall_7_1_0());
					}
					lv_constraints_8_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOneOfRule());
						}
						set(
							$current,
							"constraints",
							lv_constraints_8_0,
							"fr.mleduc.ExplicitOperations.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getOneOfAccess().getRightParenthesisKeyword_7_2());
			}
		)?
	)
;

// Entry rule entryRuleSomeOf
entryRuleSomeOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSomeOfRule()); }
	iv_ruleSomeOf=ruleSomeOf
	{ $current=$iv_ruleSomeOf.current; }
	EOF;

// Rule SomeOf
ruleSomeOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSomeOfAccess().getSomeOfAction_0(),
					$current);
			}
		)
		(
			(
				lv_optional_1_0='?'
				{
					newLeafNode(lv_optional_1_0, grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSomeOfRule());
					}
					setWithLastConsumed($current, "optional", true, "?");
				}
			)
		)?
		otherlv_2='someOf'
		{
			newLeafNode(otherlv_2, grammarAccess.getSomeOfAccess().getSomeOfKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getSomeOfAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSomeOfRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getSomeOfAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSomeOfAccess().getChildrenFeatureParserRuleCall_5_0());
				}
				lv_children_5_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSomeOfRule());
					}
					add(
						$current,
						"children",
						lv_children_5_0,
						"fr.mleduc.ExplicitOperations.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSomeOfAccess().getRightSquareBracketKeyword_6());
		}
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getSomeOfAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSomeOfAccess().getConstraintsPropositionParserRuleCall_7_1_0());
					}
					lv_constraints_8_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSomeOfRule());
						}
						set(
							$current,
							"constraints",
							lv_constraints_8_0,
							"fr.mleduc.ExplicitOperations.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getSomeOfAccess().getRightParenthesisKeyword_7_2());
			}
		)?
	)
;

// Entry rule entryRuleProposition
entryRuleProposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropositionRule()); }
	iv_ruleProposition=ruleProposition
	{ $current=$iv_ruleProposition.current; }
	EOF;

// Rule Proposition
ruleProposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPropositionAccess().getEquivParserRuleCall());
	}
	this_Equiv_0=ruleEquiv
	{
		$current = $this_Equiv_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEquiv
entryRuleEquiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquivRule()); }
	iv_ruleEquiv=ruleEquiv
	{ $current=$iv_ruleEquiv.current; }
	EOF;

// Rule Equiv
ruleEquiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEquivAccess().getImplyParserRuleCall_0());
		}
		this_Imply_0=ruleImply
		{
			$current = $this_Imply_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEquivAccess().getEquivLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='<=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getEquivAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquivAccess().getRightImplyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleImply
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.mleduc.ExplicitOperations.Imply");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImply
entryRuleImply returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplyRule()); }
	iv_ruleImply=ruleImply
	{ $current=$iv_ruleImply.current; }
	EOF;

// Rule Imply
ruleImply returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImplyAccess().getOrParserRuleCall_0());
		}
		this_Or_0=ruleOr
		{
			$current = $this_Or_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getImplyAccess().getImplyLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getImplyAccess().getEqualsSignGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImplyAccess().getRightOrParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.mleduc.ExplicitOperations.Or");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.mleduc.ExplicitOperations.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.mleduc.ExplicitOperations.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getPropositionParserRuleCall_0_1());
			}
			this_Proposition_1=ruleProposition
			{
				$current = $this_Proposition_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_4='!'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getNextPrimaryParserRuleCall_1_2_0());
					}
					lv_next_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"next",
							lv_next_5_0,
							"fr.mleduc.ExplicitOperations.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getVariableAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getRefFeatureCrossReference_2_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='inputs'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getInputsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getInputsOperationParameterParserRuleCall_3_0());
				}
				lv_inputs_3_0=ruleOperationParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_3_0,
						"fr.mleduc.ExplicitOperations.OperationParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='output'
		{
			newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getOutputKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getOutputOperationParameterParserRuleCall_5_0());
				}
				lv_output_5_0=ruleOperationParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"output",
						lv_output_5_0,
						"fr.mleduc.ExplicitOperations.OperationParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationParameter
entryRuleOperationParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationParameterRule()); }
	iv_ruleOperationParameter=ruleOperationParameter
	{ $current=$iv_ruleOperationParameter.current; }
	EOF;

// Rule OperationParameter
ruleOperationParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOperationParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOperationParameterAccess().getTypeLanguageCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationParameterAccess().getCardinalityCardinalityParserRuleCall_3_0());
				}
				lv_cardinality_3_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationParameterRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_3_0,
						"fr.mleduc.ExplicitOperations.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCardinality
entryRuleCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); }
	iv_ruleCardinality=ruleCardinality
	{ $current=$iv_ruleCardinality.current; }
	EOF;

// Rule Cardinality
ruleCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getCardinalityAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCardinalityAccess().getStartCardValParserRuleCall_1_0());
				}
				lv_start_1_0=ruleCardVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardinalityRule());
					}
					set(
						$current,
						"start",
						lv_start_1_0,
						"fr.mleduc.ExplicitOperations.CardVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='..'
		{
			newLeafNode(otherlv_2, grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCardinalityAccess().getStopCardValParserRuleCall_3_0());
				}
				lv_stop_3_0=ruleCardVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardinalityRule());
					}
					set(
						$current,
						"stop",
						lv_stop_3_0,
						"fr.mleduc.ExplicitOperations.CardVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getCardinalityAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCardVal
entryRuleCardVal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardValRule()); }
	iv_ruleCardVal=ruleCardVal
	{ $current=$iv_ruleCardVal.current; }
	EOF;

// Rule CardVal
ruleCardVal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCardValAccess().getCardVal0Action_0_0(),
						$current);
				}
			)
			otherlv_1='0'
			{
				newLeafNode(otherlv_1, grammarAccess.getCardValAccess().getDigitZeroKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCardValAccess().getCardVal1Action_1_0(),
						$current);
				}
			)
			otherlv_3='1'
			{
				newLeafNode(otherlv_3, grammarAccess.getCardValAccess().getDigitOneKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCardValAccess().getCardValNAction_2_0(),
						$current);
				}
			)
			otherlv_5='*'
			{
				newLeafNode(otherlv_5, grammarAccess.getCardValAccess().getAsteriskKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleLanguage
entryRuleLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageRule()); }
	iv_ruleLanguage=ruleLanguage
	{ $current=$iv_ruleLanguage.current; }
	EOF;

// Rule Language
ruleLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='language'
		{
			newLeafNode(otherlv_0, grammarAccess.getLanguageAccess().getLanguageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLanguageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageAccess().getDependenciesLanguageDependencyParserRuleCall_2_0());
				}
				lv_dependencies_2_0=ruleLanguageDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_2_0,
						"fr.mleduc.ExplicitOperations.LanguageDependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleLanguageDependency
entryRuleLanguageDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageDependencyRule()); }
	iv_ruleLanguageDependency=ruleLanguageDependency
	{ $current=$iv_ruleLanguageDependency.current; }
	EOF;

// Rule LanguageDependency
ruleLanguageDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLanguageDependencyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLanguageDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLanguageDependencyAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLanguageDependencyRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getLanguageDependencyAccess().getTypeLanguageCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleArtifact
entryRuleArtifact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArtifactRule()); }
	iv_ruleArtifact=ruleArtifact
	{ $current=$iv_ruleArtifact.current; }
	EOF;

// Rule Artifact
ruleArtifact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='artifact'
		{
			newLeafNode(otherlv_0, grammarAccess.getArtifactAccess().getArtifactKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArtifactRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getArtifactAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArtifactRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getArtifactAccess().getTypeLanguageCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getArtifactAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArtifactAccess().getParametersArtifactParameterParserRuleCall_4_1_0());
					}
					lv_parameters_5_0=ruleArtifactParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArtifactRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"fr.mleduc.ExplicitOperations.ArtifactParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getArtifactAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleArtifactParameter
entryRuleArtifactParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArtifactParameterRule()); }
	iv_ruleArtifactParameter=ruleArtifactParameter
	{ $current=$iv_ruleArtifactParameter.current; }
	EOF;

// Rule ArtifactParameter
ruleArtifactParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArtifactParameterRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getArtifactParameterAccess().getNameLanguageDependencyCrossReference_0_0());
				}
			)
		)
		otherlv_1='=>'
		{
			newLeafNode(otherlv_1, grammarAccess.getArtifactParameterAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArtifactParameterRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getArtifactParameterAccess().getArtifactReferentiableCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='composition'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompositionAccess().getCompositionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='::'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositionAccess().getColonColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getOperationOperationCrossReference_3_0());
				}
			)
		)
		otherlv_4='activation'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompositionAccess().getActivationKeyword_4());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getCompositionAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getActivationPropositionParserRuleCall_6_0());
				}
				lv_activation_6_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					set(
						$current,
						"activation",
						lv_activation_6_0,
						"fr.mleduc.ExplicitOperations.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='['
		{
			newLeafNode(otherlv_7, grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getParametersCompositionParameterParserRuleCall_8_0());
				}
				lv_parameters_8_0=ruleCompositionParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_8_0,
						"fr.mleduc.ExplicitOperations.CompositionParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCompositionParameter
entryRuleCompositionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionParameterRule()); }
	iv_ruleCompositionParameter=ruleCompositionParameter
	{ $current=$iv_ruleCompositionParameter.current; }
	EOF;

// Rule CompositionParameter
ruleCompositionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositionParameterRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCompositionParameterAccess().getNameOperationParameterCrossReference_0_0());
				}
			)
		)
		otherlv_1='=>'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositionParameterAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositionParameterRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getCompositionParameterAccess().getArtifactReferentiableCrossReference_2_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
