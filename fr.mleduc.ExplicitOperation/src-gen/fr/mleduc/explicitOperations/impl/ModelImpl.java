/**
 * generated by Xtext 2.10.0
 */
package fr.mleduc.explicitOperations.impl;

import fr.mleduc.explicitOperations.Artifact;
import fr.mleduc.explicitOperations.Composition;
import fr.mleduc.explicitOperations.ExplicitOperationsPackage;
import fr.mleduc.explicitOperations.FeatureModel;
import fr.mleduc.explicitOperations.Language;
import fr.mleduc.explicitOperations.Model;
import fr.mleduc.explicitOperations.Operation;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getLanguages <em>Languages</em>}</li>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getOperations <em>Operations</em>}</li>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getArtifacts <em>Artifacts</em>}</li>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getCompositions <em>Compositions</em>}</li>
 *   <li>{@link fr.mleduc.explicitOperations.impl.ModelImpl#getFeatureModels <em>Feature Models</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLanguages() <em>Languages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguages()
   * @generated
   * @ordered
   */
  protected EList<Language> languages;

  /**
   * The cached value of the '{@link #getOperations() <em>Operations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperations()
   * @generated
   * @ordered
   */
  protected EList<Operation> operations;

  /**
   * The cached value of the '{@link #getArtifacts() <em>Artifacts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArtifacts()
   * @generated
   * @ordered
   */
  protected EList<Artifact> artifacts;

  /**
   * The cached value of the '{@link #getCompositions() <em>Compositions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompositions()
   * @generated
   * @ordered
   */
  protected EList<Composition> compositions;

  /**
   * The cached value of the '{@link #getFeatureModels() <em>Feature Models</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatureModels()
   * @generated
   * @ordered
   */
  protected EList<FeatureModel> featureModels;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExplicitOperationsPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExplicitOperationsPackage.MODEL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Language> getLanguages()
  {
    if (languages == null)
    {
      languages = new EObjectContainmentEList<Language>(Language.class, this, ExplicitOperationsPackage.MODEL__LANGUAGES);
    }
    return languages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Operation> getOperations()
  {
    if (operations == null)
    {
      operations = new EObjectContainmentEList<Operation>(Operation.class, this, ExplicitOperationsPackage.MODEL__OPERATIONS);
    }
    return operations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Artifact> getArtifacts()
  {
    if (artifacts == null)
    {
      artifacts = new EObjectContainmentEList<Artifact>(Artifact.class, this, ExplicitOperationsPackage.MODEL__ARTIFACTS);
    }
    return artifacts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Composition> getCompositions()
  {
    if (compositions == null)
    {
      compositions = new EObjectContainmentEList<Composition>(Composition.class, this, ExplicitOperationsPackage.MODEL__COMPOSITIONS);
    }
    return compositions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FeatureModel> getFeatureModels()
  {
    if (featureModels == null)
    {
      featureModels = new EObjectContainmentEList<FeatureModel>(FeatureModel.class, this, ExplicitOperationsPackage.MODEL__FEATURE_MODELS);
    }
    return featureModels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ExplicitOperationsPackage.MODEL__LANGUAGES:
        return ((InternalEList<?>)getLanguages()).basicRemove(otherEnd, msgs);
      case ExplicitOperationsPackage.MODEL__OPERATIONS:
        return ((InternalEList<?>)getOperations()).basicRemove(otherEnd, msgs);
      case ExplicitOperationsPackage.MODEL__ARTIFACTS:
        return ((InternalEList<?>)getArtifacts()).basicRemove(otherEnd, msgs);
      case ExplicitOperationsPackage.MODEL__COMPOSITIONS:
        return ((InternalEList<?>)getCompositions()).basicRemove(otherEnd, msgs);
      case ExplicitOperationsPackage.MODEL__FEATURE_MODELS:
        return ((InternalEList<?>)getFeatureModels()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExplicitOperationsPackage.MODEL__NAME:
        return getName();
      case ExplicitOperationsPackage.MODEL__LANGUAGES:
        return getLanguages();
      case ExplicitOperationsPackage.MODEL__OPERATIONS:
        return getOperations();
      case ExplicitOperationsPackage.MODEL__ARTIFACTS:
        return getArtifacts();
      case ExplicitOperationsPackage.MODEL__COMPOSITIONS:
        return getCompositions();
      case ExplicitOperationsPackage.MODEL__FEATURE_MODELS:
        return getFeatureModels();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExplicitOperationsPackage.MODEL__NAME:
        setName((String)newValue);
        return;
      case ExplicitOperationsPackage.MODEL__LANGUAGES:
        getLanguages().clear();
        getLanguages().addAll((Collection<? extends Language>)newValue);
        return;
      case ExplicitOperationsPackage.MODEL__OPERATIONS:
        getOperations().clear();
        getOperations().addAll((Collection<? extends Operation>)newValue);
        return;
      case ExplicitOperationsPackage.MODEL__ARTIFACTS:
        getArtifacts().clear();
        getArtifacts().addAll((Collection<? extends Artifact>)newValue);
        return;
      case ExplicitOperationsPackage.MODEL__COMPOSITIONS:
        getCompositions().clear();
        getCompositions().addAll((Collection<? extends Composition>)newValue);
        return;
      case ExplicitOperationsPackage.MODEL__FEATURE_MODELS:
        getFeatureModels().clear();
        getFeatureModels().addAll((Collection<? extends FeatureModel>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExplicitOperationsPackage.MODEL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ExplicitOperationsPackage.MODEL__LANGUAGES:
        getLanguages().clear();
        return;
      case ExplicitOperationsPackage.MODEL__OPERATIONS:
        getOperations().clear();
        return;
      case ExplicitOperationsPackage.MODEL__ARTIFACTS:
        getArtifacts().clear();
        return;
      case ExplicitOperationsPackage.MODEL__COMPOSITIONS:
        getCompositions().clear();
        return;
      case ExplicitOperationsPackage.MODEL__FEATURE_MODELS:
        getFeatureModels().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExplicitOperationsPackage.MODEL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ExplicitOperationsPackage.MODEL__LANGUAGES:
        return languages != null && !languages.isEmpty();
      case ExplicitOperationsPackage.MODEL__OPERATIONS:
        return operations != null && !operations.isEmpty();
      case ExplicitOperationsPackage.MODEL__ARTIFACTS:
        return artifacts != null && !artifacts.isEmpty();
      case ExplicitOperationsPackage.MODEL__COMPOSITIONS:
        return compositions != null && !compositions.isEmpty();
      case ExplicitOperationsPackage.MODEL__FEATURE_MODELS:
        return featureModels != null && !featureModels.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
