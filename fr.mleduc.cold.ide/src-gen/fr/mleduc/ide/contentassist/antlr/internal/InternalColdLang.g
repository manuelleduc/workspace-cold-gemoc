/*
 * generated by Xtext 2.10.0
 */
grammar InternalColdLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.mleduc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.mleduc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.mleduc.services.ColdLangGrammarAccess;

}
@parser::members {
	private ColdLangGrammarAccess grammarAccess;

	public void setGrammarAccess(ColdLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcern
entryRuleConcern
:
{ before(grammarAccess.getConcernRule()); }
	 ruleConcern
{ after(grammarAccess.getConcernRule()); } 
	 EOF 
;

// Rule Concern
ruleConcern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcernAccess().getGroup()); }
		(rule__Concern__Group__0)
		{ after(grammarAccess.getConcernAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureModel
entryRuleFeatureModel
:
{ before(grammarAccess.getFeatureModelRule()); }
	 ruleFeatureModel
{ after(grammarAccess.getFeatureModelRule()); } 
	 EOF 
;

// Rule FeatureModel
ruleFeatureModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureModelAccess().getAlternatives()); }
		(rule__FeatureModel__Alternatives)
		{ after(grammarAccess.getFeatureModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOneOf
entryRuleOneOf
:
{ before(grammarAccess.getOneOfRule()); }
	 ruleOneOf
{ after(grammarAccess.getOneOfRule()); } 
	 EOF 
;

// Rule OneOf
ruleOneOf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOneOfAccess().getGroup()); }
		(rule__OneOf__Group__0)
		{ after(grammarAccess.getOneOfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSomeOf
entryRuleSomeOf
:
{ before(grammarAccess.getSomeOfRule()); }
	 ruleSomeOf
{ after(grammarAccess.getSomeOfRule()); } 
	 EOF 
;

// Rule SomeOf
ruleSomeOf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSomeOfAccess().getGroup()); }
		(rule__SomeOf__Group__0)
		{ after(grammarAccess.getSomeOfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguage
entryRuleLanguage
:
{ before(grammarAccess.getLanguageRule()); }
	 ruleLanguage
{ after(grammarAccess.getLanguageRule()); } 
	 EOF 
;

// Rule Language
ruleLanguage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageAccess().getGroup()); }
		(rule__Language__Group__0)
		{ after(grammarAccess.getLanguageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageOperator
entryRuleLanguageOperator
:
{ before(grammarAccess.getLanguageOperatorRule()); }
	 ruleLanguageOperator
{ after(grammarAccess.getLanguageOperatorRule()); } 
	 EOF 
;

// Rule LanguageOperator
ruleLanguageOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageOperatorAccess().getGroup()); }
		(rule__LanguageOperator__Group__0)
		{ after(grammarAccess.getLanguageOperatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerspective
entryRulePerspective
:
{ before(grammarAccess.getPerspectiveRule()); }
	 rulePerspective
{ after(grammarAccess.getPerspectiveRule()); } 
	 EOF 
;

// Rule Perspective
rulePerspective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPerspectiveAccess().getGroup()); }
		(rule__Perspective__Group__0)
		{ after(grammarAccess.getPerspectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerspectiveLanguage
entryRulePerspectiveLanguage
:
{ before(grammarAccess.getPerspectiveLanguageRule()); }
	 rulePerspectiveLanguage
{ after(grammarAccess.getPerspectiveLanguageRule()); } 
	 EOF 
;

// Rule PerspectiveLanguage
rulePerspectiveLanguage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPerspectiveLanguageAccess().getGroup()); }
		(rule__PerspectiveLanguage__Group__0)
		{ after(grammarAccess.getPerspectiveLanguageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFacet
entryRuleFacet
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFacetAccess().getGroup()); }
		(rule__Facet__Group__0)
		{ after(grammarAccess.getFacetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFacetComposition
entryRuleFacetComposition
:
{ before(grammarAccess.getFacetCompositionRule()); }
	 ruleFacetComposition
{ after(grammarAccess.getFacetCompositionRule()); } 
	 EOF 
;

// Rule FacetComposition
ruleFacetComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFacetCompositionAccess().getGroup()); }
		(rule__FacetComposition__Group__0)
		{ after(grammarAccess.getFacetCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getAlternatives()); }
		(rule__Application__Alternatives)
		{ after(grammarAccess.getApplicationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArtifact
entryRuleArtifact
:
{ before(grammarAccess.getArtifactRule()); }
	 ruleArtifact
{ after(grammarAccess.getArtifactRule()); } 
	 EOF 
;

// Rule Artifact
ruleArtifact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtifactAccess().getGroup()); }
		(rule__Artifact__Group__0)
		{ after(grammarAccess.getArtifactAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getEquivParserRuleCall()); }
		ruleEquiv
		{ after(grammarAccess.getConditionAccess().getEquivParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquiv
entryRuleEquiv
:
{ before(grammarAccess.getEquivRule()); }
	 ruleEquiv
{ after(grammarAccess.getEquivRule()); } 
	 EOF 
;

// Rule Equiv
ruleEquiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquivAccess().getGroup()); }
		(rule__Equiv__Group__0)
		{ after(grammarAccess.getEquivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImply
entryRuleImply
:
{ before(grammarAccess.getImplyRule()); }
	 ruleImply
{ after(grammarAccess.getImplyRule()); } 
	 EOF 
;

// Rule Imply
ruleImply 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplyAccess().getGroup()); }
		(rule__Imply__Group__0)
		{ after(grammarAccess.getImplyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDS
entryRuleIDS
:
{ before(grammarAccess.getIDSRule()); }
	 ruleIDS
{ after(grammarAccess.getIDSRule()); } 
	 EOF 
;

// Rule IDS
ruleIDS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDSAccess().getGroup()); }
		(rule__IDS__Group__0)
		{ after(grammarAccess.getIDSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConcernsAssignment_0()); }
		(rule__Model__ConcernsAssignment_0)
		{ after(grammarAccess.getModelAccess().getConcernsAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getLanguagesAssignment_1()); }
		(rule__Model__LanguagesAssignment_1)
		{ after(grammarAccess.getModelAccess().getLanguagesAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getPerspectivesAssignment_2()); }
		(rule__Model__PerspectivesAssignment_2)
		{ after(grammarAccess.getModelAccess().getPerspectivesAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getFacetsAssignment_4_0()); }
		(rule__Concern__FacetsAssignment_4_0)
		{ after(grammarAccess.getConcernAccess().getFacetsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getConcernAccess().getArtifactAssignment_4_1()); }
		(rule__Concern__ArtifactAssignment_4_1)
		{ after(grammarAccess.getConcernAccess().getArtifactAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureModelAccess().getOneOfParserRuleCall_0()); }
		ruleOneOf
		{ after(grammarAccess.getFeatureModelAccess().getOneOfParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureModelAccess().getSomeOfParserRuleCall_1()); }
		ruleSomeOf
		{ after(grammarAccess.getFeatureModelAccess().getSomeOfParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureModelAccess().getFeatureParserRuleCall_2()); }
		ruleFeature
		{ after(grammarAccess.getFeatureModelAccess().getFeatureParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup_0()); }
		(rule__Application__Group_0__0)
		{ after(grammarAccess.getApplicationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getApplicationAccess().getGroup_1()); }
		(rule__Application__Group_1__0)
		{ after(grammarAccess.getApplicationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__0__Impl
	rule__Concern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getConcernKeyword_0()); }
	'concern'
	{ after(grammarAccess.getConcernAccess().getConcernKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__1__Impl
	rule__Concern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getNameAssignment_1()); }
	(rule__Concern__NameAssignment_1)
	{ after(grammarAccess.getConcernAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__2__Impl
	rule__Concern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConcernAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__3__Impl
	rule__Concern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getGroup_3()); }
	(rule__Concern__Group_3__0)?
	{ after(grammarAccess.getConcernAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__4__Impl
	rule__Concern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getAlternatives_4()); }
	(rule__Concern__Alternatives_4)*
	{ after(grammarAccess.getConcernAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__5__Impl
	rule__Concern__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getFmAssignment_5()); }
	(rule__Concern__FmAssignment_5)
	{ after(grammarAccess.getConcernAccess().getFmAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConcernAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group_3__0__Impl
	rule__Concern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getImportKeyword_3_0()); }
	'import'
	{ after(grammarAccess.getConcernAccess().getImportKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getImportedAssignment_3_1()); }
	(rule__Concern__ImportedAssignment_3_1)
	{ after(grammarAccess.getConcernAccess().getImportedAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OneOf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__0__Impl
	rule__OneOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOneOfAction_0()); }
	()
	{ after(grammarAccess.getOneOfAccess().getOneOfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__1__Impl
	rule__OneOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOptionalAssignment_1()); }
	(rule__OneOf__OptionalAssignment_1)?
	{ after(grammarAccess.getOneOfAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__2__Impl
	rule__OneOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOneOfKeyword_2()); }
	'oneOf'
	{ after(grammarAccess.getOneOfAccess().getOneOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__3__Impl
	rule__OneOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getNameAssignment_3()); }
	(rule__OneOf__NameAssignment_3)
	{ after(grammarAccess.getOneOfAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__4__Impl
	rule__OneOf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getOneOfAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__5__Impl
	rule__OneOf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getGroup_5()); }
	(rule__OneOf__Group_5__0)*
	{ after(grammarAccess.getOneOfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__6__Impl
	rule__OneOf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getOneOfAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getConditionAssignment_7()); }
	(rule__OneOf__ConditionAssignment_7)?
	{ after(grammarAccess.getOneOfAccess().getConditionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OneOf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group_5__0__Impl
	rule__OneOf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getHyphenMinusKeyword_5_0()); }
	'-'
	{ after(grammarAccess.getOneOfAccess().getHyphenMinusKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getChildrenAssignment_5_1()); }
	(rule__OneOf__ChildrenAssignment_5_1)
	{ after(grammarAccess.getOneOfAccess().getChildrenAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SomeOf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__0__Impl
	rule__SomeOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getSomeOfAction_0()); }
	()
	{ after(grammarAccess.getSomeOfAccess().getSomeOfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__1__Impl
	rule__SomeOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getOptionalAssignment_1()); }
	(rule__SomeOf__OptionalAssignment_1)?
	{ after(grammarAccess.getSomeOfAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__2__Impl
	rule__SomeOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getSomeOfKeyword_2()); }
	'someOf'
	{ after(grammarAccess.getSomeOfAccess().getSomeOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__3__Impl
	rule__SomeOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getNameAssignment_3()); }
	(rule__SomeOf__NameAssignment_3)
	{ after(grammarAccess.getSomeOfAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__4__Impl
	rule__SomeOf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getSomeOfAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__5__Impl
	rule__SomeOf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getGroup_5()); }
	(rule__SomeOf__Group_5__0)*
	{ after(grammarAccess.getSomeOfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__6__Impl
	rule__SomeOf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getSomeOfAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getConditionAssignment_7()); }
	(rule__SomeOf__ConditionAssignment_7)?
	{ after(grammarAccess.getSomeOfAccess().getConditionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SomeOf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group_5__0__Impl
	rule__SomeOf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getHyphenMinusKeyword_5_0()); }
	'-'
	{ after(grammarAccess.getSomeOfAccess().getHyphenMinusKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getChildrenAssignment_5_1()); }
	(rule__SomeOf__ChildrenAssignment_5_1)
	{ after(grammarAccess.getSomeOfAccess().getChildrenAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureAction_0()); }
	()
	{ after(grammarAccess.getFeatureAccess().getFeatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getOptionalAssignment_1()); }
	(rule__Feature__OptionalAssignment_1)?
	{ after(grammarAccess.getFeatureAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_2()); }
	'feature'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_3()); }
	(rule__Feature__NameAssignment_3)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getConditionAssignment_4()); }
	(rule__Feature__ConditionAssignment_4)?
	{ after(grammarAccess.getFeatureAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__0__Impl
	rule__Language__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }
	'language'
	{ after(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__1__Impl
	rule__Language__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
	(rule__Language__NameAssignment_1)
	{ after(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__2__Impl
	rule__Language__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__3__Impl
	rule__Language__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getOperatorsAssignment_3()); }
	(rule__Language__OperatorsAssignment_3)*
	{ after(grammarAccess.getLanguageAccess().getOperatorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageOperator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__0__Impl
	rule__LanguageOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getNameAssignment_0()); }
	(rule__LanguageOperator__NameAssignment_0)
	{ after(grammarAccess.getLanguageOperatorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__1__Impl
	rule__LanguageOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLanguageOperatorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__2__Impl
	rule__LanguageOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getTypeAssignment_2()); }
	(rule__LanguageOperator__TypeAssignment_2)
	{ after(grammarAccess.getLanguageOperatorAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__3__Impl
	rule__LanguageOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getGroup_3()); }
	(rule__LanguageOperator__Group_3__0)*
	{ after(grammarAccess.getLanguageOperatorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__4__Impl
	rule__LanguageOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getLanguageOperatorAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__5__Impl
	rule__LanguageOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getDescriptionAssignment_5()); }
	(rule__LanguageOperator__DescriptionAssignment_5)
	{ after(grammarAccess.getLanguageOperatorAccess().getDescriptionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getLanguageOperatorAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageOperator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group_3__0__Impl
	rule__LanguageOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getEqualsSignGreaterThanSignKeyword_3_0()); }
	'=>'
	{ after(grammarAccess.getLanguageOperatorAccess().getEqualsSignGreaterThanSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageOperatorAccess().getTypesAssignment_3_1()); }
	(rule__LanguageOperator__TypesAssignment_3_1)
	{ after(grammarAccess.getLanguageOperatorAccess().getTypesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Perspective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Perspective__Group__0__Impl
	rule__Perspective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveAccess().getPerspectiveKeyword_0()); }
	'perspective'
	{ after(grammarAccess.getPerspectiveAccess().getPerspectiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Perspective__Group__1__Impl
	rule__Perspective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveAccess().getNameAssignment_1()); }
	(rule__Perspective__NameAssignment_1)
	{ after(grammarAccess.getPerspectiveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Perspective__Group__2__Impl
	rule__Perspective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPerspectiveAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Perspective__Group__3__Impl
	rule__Perspective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveAccess().getLanguagesAssignment_3()); }
	(rule__Perspective__LanguagesAssignment_3)*
	{ after(grammarAccess.getPerspectiveAccess().getLanguagesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Perspective__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPerspectiveAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PerspectiveLanguage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group__0__Impl
	rule__PerspectiveLanguage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getNameAssignment_0()); }
	(rule__PerspectiveLanguage__NameAssignment_0)
	{ after(grammarAccess.getPerspectiveLanguageAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group__1__Impl
	rule__PerspectiveLanguage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPerspectiveLanguageAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group__2__Impl
	rule__PerspectiveLanguage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getLanguageAssignment_2()); }
	(rule__PerspectiveLanguage__LanguageAssignment_2)
	{ after(grammarAccess.getPerspectiveLanguageAccess().getLanguageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getGroup_3()); }
	(rule__PerspectiveLanguage__Group_3__0)?
	{ after(grammarAccess.getPerspectiveLanguageAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PerspectiveLanguage__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group_3__0__Impl
	rule__PerspectiveLanguage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getOperatorAssignment_3_0()); }
	(rule__PerspectiveLanguage__OperatorAssignment_3_0)
	{ after(grammarAccess.getPerspectiveLanguageAccess().getOperatorAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PerspectiveLanguage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPerspectiveLanguageAccess().getPerspectiveAssignment_3_1()); }
	(rule__PerspectiveLanguage__PerspectiveAssignment_3_1)
	{ after(grammarAccess.getPerspectiveLanguageAccess().getPerspectiveAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__0__Impl
	rule__Facet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getFacetKeyword_0()); }
	'facet'
	{ after(grammarAccess.getFacetAccess().getFacetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__1__Impl
	rule__Facet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getNameAssignment_1()); }
	(rule__Facet__NameAssignment_1)
	{ after(grammarAccess.getFacetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__2__Impl
	rule__Facet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFacetAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__3__Impl
	rule__Facet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getPerspectiveAssignment_3()); }
	(rule__Facet__PerspectiveAssignment_3)
	{ after(grammarAccess.getFacetAccess().getPerspectiveAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__4__Impl
	rule__Facet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__5__Impl
	rule__Facet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getActivationKeyword_5()); }
	'activation'
	{ after(grammarAccess.getFacetAccess().getActivationKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__6__Impl
	rule__Facet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getActivationAssignment_6()); }
	(rule__Facet__ActivationAssignment_6)
	{ after(grammarAccess.getFacetAccess().getActivationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__7__Impl
	rule__Facet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getCompositionsAssignment_7()); }
	(rule__Facet__CompositionsAssignment_7)*
	{ after(grammarAccess.getFacetAccess().getCompositionsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facet__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FacetComposition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FacetComposition__Group__0__Impl
	rule__FacetComposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguageAssignment_0()); }
	(rule__FacetComposition__PerspectiveLanguageAssignment_0)
	{ after(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FacetComposition__Group__1__Impl
	rule__FacetComposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetCompositionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFacetCompositionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FacetComposition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacetCompositionAccess().getApplicationAssignment_2()); }
	(rule__FacetComposition__ApplicationAssignment_2)
	{ after(grammarAccess.getFacetCompositionAccess().getApplicationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_0__0__Impl
	rule__Application__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getArtifactRefAction_0_0()); }
	()
	{ after(grammarAccess.getApplicationAccess().getArtifactRefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getArtifactAssignment_0_1()); }
	(rule__Application__ArtifactAssignment_0_1)
	{ after(grammarAccess.getApplicationAccess().getArtifactAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__0__Impl
	rule__Application__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationAction_1_0()); }
	()
	{ after(grammarAccess.getApplicationAccess().getApplicationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__1__Impl
	rule__Application__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLanguageOperatorAssignment_1_1()); }
	(rule__Application__LanguageOperatorAssignment_1_1)
	{ after(grammarAccess.getApplicationAccess().getLanguageOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__2__Impl
	rule__Application__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getApplicationAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__3__Impl
	rule__Application__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationsAssignment_1_3()); }
	(rule__Application__ApplicationsAssignment_1_3)
	{ after(grammarAccess.getApplicationAccess().getApplicationsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__4__Impl
	rule__Application__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getGroup_1_4()); }
	(rule__Application__Group_1_4__0)*
	{ after(grammarAccess.getApplicationAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getApplicationAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1_4__0__Impl
	rule__Application__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getCommaKeyword_1_4_0()); }
	','
	{ after(grammarAccess.getApplicationAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationsAssignment_1_4_1()); }
	(rule__Application__ApplicationsAssignment_1_4_1)
	{ after(grammarAccess.getApplicationAccess().getApplicationsAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifact__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__0__Impl
	rule__Artifact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getArtifactKeyword_0()); }
	'artifact'
	{ after(grammarAccess.getArtifactAccess().getArtifactKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__1__Impl
	rule__Artifact__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getNameAssignment_1()); }
	(rule__Artifact__NameAssignment_1)
	{ after(grammarAccess.getArtifactAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__2__Impl
	rule__Artifact__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getArtifactAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getLanguageAssignment_3()); }
	(rule__Artifact__LanguageAssignment_3)
	{ after(grammarAccess.getArtifactAccess().getLanguageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group__0__Impl
	rule__Equiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getImplyParserRuleCall_0()); }
	ruleImply
	{ after(grammarAccess.getEquivAccess().getImplyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getGroup_1()); }
	(rule__Equiv__Group_1__0)*
	{ after(grammarAccess.getEquivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__0__Impl
	rule__Equiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getEquivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEquivAccess().getEquivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__1__Impl
	rule__Equiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
	'<=>'
	{ after(grammarAccess.getEquivAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getRightAssignment_1_2()); }
	(rule__Equiv__RightAssignment_1_2)
	{ after(grammarAccess.getEquivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imply__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group__0__Impl
	rule__Imply__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getImplyAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getGroup_1()); }
	(rule__Imply__Group_1__0)*
	{ after(grammarAccess.getImplyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imply__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__0__Impl
	rule__Imply__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getImplyLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImplyAccess().getImplyLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__1__Impl
	rule__Imply__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
	'=>'
	{ after(grammarAccess.getImplyAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getRightAssignment_1_2()); }
	(rule__Imply__RightAssignment_1_2)
	{ after(grammarAccess.getImplyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getConditionParserRuleCall_0_1()); }
	ruleCondition
	{ after(grammarAccess.getPrimaryAccess().getConditionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNextAssignment_1_2()); }
	(rule__Primary__NextAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getNextAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getVariableAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getVariableAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRefAssignment_2_1()); }
	(rule__Primary__RefAssignment_2_1)
	{ after(grammarAccess.getPrimaryAccess().getRefAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IDS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDS__Group__0__Impl
	rule__IDS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getIDSAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSAccess().getGroup_1()); }
	(rule__IDS__Group_1__0)*
	{ after(grammarAccess.getIDSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IDS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDS__Group_1__0__Impl
	rule__IDS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getIDSAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDS__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IDS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getIDSAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConcernsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConcernsConcernParserRuleCall_0_0()); }
		ruleConcern
		{ after(grammarAccess.getModelAccess().getConcernsConcernParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LanguagesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_1_0()); }
		ruleLanguage
		{ after(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PerspectivesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPerspectivesPerspectiveParserRuleCall_2_0()); }
		rulePerspective
		{ after(grammarAccess.getModelAccess().getPerspectivesPerspectiveParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConcernAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ImportedAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getImportedPerspectiveCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getConcernAccess().getImportedPerspectiveIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConcernAccess().getImportedPerspectiveIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getConcernAccess().getImportedPerspectiveCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__FacetsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getFacetsFacetParserRuleCall_4_0_0()); }
		ruleFacet
		{ after(grammarAccess.getConcernAccess().getFacetsFacetParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ArtifactAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getArtifactArtifactParserRuleCall_4_1_0()); }
		ruleArtifact
		{ after(grammarAccess.getConcernAccess().getArtifactArtifactParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__FmAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getFmFeatureModelParserRuleCall_5_0()); }
		ruleFeatureModel
		{ after(grammarAccess.getConcernAccess().getFmFeatureModelParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getOneOfAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__ChildrenAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getChildrenFeatureModelParserRuleCall_5_1_0()); }
		ruleFeatureModel
		{ after(grammarAccess.getOneOfAccess().getChildrenFeatureModelParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__ConditionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getConditionConditionParserRuleCall_7_0()); }
		ruleCondition
		{ after(grammarAccess.getOneOfAccess().getConditionConditionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSomeOfAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__ChildrenAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getChildrenFeatureModelParserRuleCall_5_1_0()); }
		ruleFeatureModel
		{ after(grammarAccess.getSomeOfAccess().getChildrenFeatureModelParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__ConditionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getConditionConditionParserRuleCall_7_0()); }
		ruleCondition
		{ after(grammarAccess.getSomeOfAccess().getConditionConditionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getConditionConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getFeatureAccess().getConditionConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__OperatorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getOperatorsLanguageOperatorParserRuleCall_3_0()); }
		ruleLanguageOperator
		{ after(grammarAccess.getLanguageAccess().getOperatorsLanguageOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOperatorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageOperatorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOperatorAccess().getTypeLanguageCrossReference_2_0()); }
		(
			{ before(grammarAccess.getLanguageOperatorAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLanguageOperatorAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getLanguageOperatorAccess().getTypeLanguageCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__TypesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOperatorAccess().getTypesLanguageCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getLanguageOperatorAccess().getTypesLanguageIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLanguageOperatorAccess().getTypesLanguageIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getLanguageOperatorAccess().getTypesLanguageCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageOperator__DescriptionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageOperatorAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageOperatorAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPerspectiveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Perspective__LanguagesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveAccess().getLanguagesPerspectiveLanguageParserRuleCall_3_0()); }
		rulePerspectiveLanguage
		{ after(grammarAccess.getPerspectiveAccess().getLanguagesPerspectiveLanguageParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveLanguageAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPerspectiveLanguageAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__LanguageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveLanguageAccess().getLanguageLanguageCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPerspectiveLanguageAccess().getLanguageLanguageIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPerspectiveLanguageAccess().getLanguageLanguageIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPerspectiveLanguageAccess().getLanguageLanguageCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__OperatorAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveLanguageAccess().getOperatorLanguageOperatorCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getPerspectiveLanguageAccess().getOperatorLanguageOperatorIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPerspectiveLanguageAccess().getOperatorLanguageOperatorIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getPerspectiveLanguageAccess().getOperatorLanguageOperatorCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PerspectiveLanguage__PerspectiveAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPerspectiveLanguageAccess().getPerspectivePerspectiveLanguageCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getPerspectiveLanguageAccess().getPerspectivePerspectiveLanguageIDSParserRuleCall_3_1_0_1()); }
			ruleIDS
			{ after(grammarAccess.getPerspectiveLanguageAccess().getPerspectivePerspectiveLanguageIDSParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getPerspectiveLanguageAccess().getPerspectivePerspectiveLanguageCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__PerspectiveAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetAccess().getPerspectivePerspectiveCrossReference_3_0()); }
		(
			{ before(grammarAccess.getFacetAccess().getPerspectivePerspectiveIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFacetAccess().getPerspectivePerspectiveIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getFacetAccess().getPerspectivePerspectiveCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__ActivationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetAccess().getActivationConditionParserRuleCall_6_0()); }
		ruleCondition
		{ after(grammarAccess.getFacetAccess().getActivationConditionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__CompositionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetAccess().getCompositionsFacetCompositionParserRuleCall_7_0()); }
		ruleFacetComposition
		{ after(grammarAccess.getFacetAccess().getCompositionsFacetCompositionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__PerspectiveLanguageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguagePerspectiveLanguageCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguagePerspectiveLanguageIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguagePerspectiveLanguageIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFacetCompositionAccess().getPerspectiveLanguagePerspectiveLanguageCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FacetComposition__ApplicationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetCompositionAccess().getApplicationApplicationParserRuleCall_2_0()); }
		ruleApplication
		{ after(grammarAccess.getFacetCompositionAccess().getApplicationApplicationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ArtifactAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getArtifactArtifactCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getApplicationAccess().getArtifactArtifactIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getApplicationAccess().getArtifactArtifactIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getApplicationAccess().getArtifactArtifactCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__LanguageOperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getLanguageOperatorLanguageOperatorCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getApplicationAccess().getLanguageOperatorLanguageOperatorIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getApplicationAccess().getLanguageOperatorLanguageOperatorIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getApplicationAccess().getLanguageOperatorLanguageOperatorCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ApplicationsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getApplicationsApplicationParserRuleCall_1_3_0()); }
		ruleApplication
		{ after(grammarAccess.getApplicationAccess().getApplicationsApplicationParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ApplicationsAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getApplicationsApplicationParserRuleCall_1_4_1_0()); }
		ruleApplication
		{ after(grammarAccess.getApplicationAccess().getApplicationsApplicationParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__LanguageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactAccess().getLanguageLanguageCrossReference_3_0()); }
		(
			{ before(grammarAccess.getArtifactAccess().getLanguageLanguageIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArtifactAccess().getLanguageLanguageIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getArtifactAccess().getLanguageLanguageCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquivAccess().getRightImplyParserRuleCall_1_2_0()); }
		ruleImply
		{ after(grammarAccess.getEquivAccess().getRightImplyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplyAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getImplyAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NextAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNextPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getNextPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__RefAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getRefFeatureModelCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getRefFeatureModelIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getRefFeatureModelIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getRefFeatureModelCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
