package fr.mleduc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.mleduc.services.ExplicitOperationsGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalExplicitOperationsParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "'operation'", "'inputs'", "'output'", "':'", "'['", "'..'", "']'", "'0'", "'1'", "'*'", "'language'", "'artifact'", "'composition'", "'::'", "'=>'"
    };
    public static final int RULE_STRING=6;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int EOF=-1;
    public static final int RULE_ID=4;
    public static final int RULE_WS=9;
    public static final int RULE_ANY_OTHER=10;
    public static final int T__26=26;
    public static final int RULE_INT=5;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=7;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;

    // delegates
    // delegators


        public InternalExplicitOperationsParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalExplicitOperationsParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalExplicitOperationsParser.tokenNames; }
    public String getGrammarFileName() { return "InternalExplicitOperations.g"; }



     	private ExplicitOperationsGrammarAccess grammarAccess;

        public InternalExplicitOperationsParser(TokenStream input, ExplicitOperationsGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected ExplicitOperationsGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalExplicitOperations.g:64:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalExplicitOperations.g:64:46: (iv_ruleModel= ruleModel EOF )
            // InternalExplicitOperations.g:65:2: iv_ruleModel= ruleModel EOF
            {
             newCompositeNode(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;

             current =iv_ruleModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalExplicitOperations.g:71:1: ruleModel returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )* ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        EObject lv_languages_2_0 = null;

        EObject lv_operations_3_0 = null;

        EObject lv_artifacts_4_0 = null;

        EObject lv_compositions_5_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:77:2: ( (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )* ) )
            // InternalExplicitOperations.g:78:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )* )
            {
            // InternalExplicitOperations.g:78:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )* )
            // InternalExplicitOperations.g:79:3: otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )*
            {
            otherlv_0=(Token)match(input,11,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0());
            		
            // InternalExplicitOperations.g:83:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalExplicitOperations.g:84:4: (lv_name_1_0= RULE_ID )
            {
            // InternalExplicitOperations.g:84:4: (lv_name_1_0= RULE_ID )
            // InternalExplicitOperations.g:85:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_4); 

            					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getModelRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            // InternalExplicitOperations.g:101:3: ( ( (lv_languages_2_0= ruleLanguage ) ) | ( (lv_operations_3_0= ruleOperation ) ) | ( (lv_artifacts_4_0= ruleArtifact ) ) | ( (lv_compositions_5_0= ruleComposition ) ) )*
            loop1:
            do {
                int alt1=5;
                switch ( input.LA(1) ) {
                case 22:
                    {
                    alt1=1;
                    }
                    break;
                case 12:
                    {
                    alt1=2;
                    }
                    break;
                case 23:
                    {
                    alt1=3;
                    }
                    break;
                case 24:
                    {
                    alt1=4;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalExplicitOperations.g:102:4: ( (lv_languages_2_0= ruleLanguage ) )
            	    {
            	    // InternalExplicitOperations.g:102:4: ( (lv_languages_2_0= ruleLanguage ) )
            	    // InternalExplicitOperations.g:103:5: (lv_languages_2_0= ruleLanguage )
            	    {
            	    // InternalExplicitOperations.g:103:5: (lv_languages_2_0= ruleLanguage )
            	    // InternalExplicitOperations.g:104:6: lv_languages_2_0= ruleLanguage
            	    {

            	    						newCompositeNode(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_2_0_0());
            	    					
            	    pushFollow(FOLLOW_4);
            	    lv_languages_2_0=ruleLanguage();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getModelRule());
            	    						}
            	    						add(
            	    							current,
            	    							"languages",
            	    							lv_languages_2_0,
            	    							"fr.mleduc.ExplicitOperations.Language");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalExplicitOperations.g:122:4: ( (lv_operations_3_0= ruleOperation ) )
            	    {
            	    // InternalExplicitOperations.g:122:4: ( (lv_operations_3_0= ruleOperation ) )
            	    // InternalExplicitOperations.g:123:5: (lv_operations_3_0= ruleOperation )
            	    {
            	    // InternalExplicitOperations.g:123:5: (lv_operations_3_0= ruleOperation )
            	    // InternalExplicitOperations.g:124:6: lv_operations_3_0= ruleOperation
            	    {

            	    						newCompositeNode(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_2_1_0());
            	    					
            	    pushFollow(FOLLOW_4);
            	    lv_operations_3_0=ruleOperation();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getModelRule());
            	    						}
            	    						add(
            	    							current,
            	    							"operations",
            	    							lv_operations_3_0,
            	    							"fr.mleduc.ExplicitOperations.Operation");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalExplicitOperations.g:142:4: ( (lv_artifacts_4_0= ruleArtifact ) )
            	    {
            	    // InternalExplicitOperations.g:142:4: ( (lv_artifacts_4_0= ruleArtifact ) )
            	    // InternalExplicitOperations.g:143:5: (lv_artifacts_4_0= ruleArtifact )
            	    {
            	    // InternalExplicitOperations.g:143:5: (lv_artifacts_4_0= ruleArtifact )
            	    // InternalExplicitOperations.g:144:6: lv_artifacts_4_0= ruleArtifact
            	    {

            	    						newCompositeNode(grammarAccess.getModelAccess().getArtifactsArtifactParserRuleCall_2_2_0());
            	    					
            	    pushFollow(FOLLOW_4);
            	    lv_artifacts_4_0=ruleArtifact();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getModelRule());
            	    						}
            	    						add(
            	    							current,
            	    							"artifacts",
            	    							lv_artifacts_4_0,
            	    							"fr.mleduc.ExplicitOperations.Artifact");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalExplicitOperations.g:162:4: ( (lv_compositions_5_0= ruleComposition ) )
            	    {
            	    // InternalExplicitOperations.g:162:4: ( (lv_compositions_5_0= ruleComposition ) )
            	    // InternalExplicitOperations.g:163:5: (lv_compositions_5_0= ruleComposition )
            	    {
            	    // InternalExplicitOperations.g:163:5: (lv_compositions_5_0= ruleComposition )
            	    // InternalExplicitOperations.g:164:6: lv_compositions_5_0= ruleComposition
            	    {

            	    						newCompositeNode(grammarAccess.getModelAccess().getCompositionsCompositionParserRuleCall_2_3_0());
            	    					
            	    pushFollow(FOLLOW_4);
            	    lv_compositions_5_0=ruleComposition();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getModelRule());
            	    						}
            	    						add(
            	    							current,
            	    							"compositions",
            	    							lv_compositions_5_0,
            	    							"fr.mleduc.ExplicitOperations.Composition");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleOperation"
    // InternalExplicitOperations.g:186:1: entryRuleOperation returns [EObject current=null] : iv_ruleOperation= ruleOperation EOF ;
    public final EObject entryRuleOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperation = null;


        try {
            // InternalExplicitOperations.g:186:50: (iv_ruleOperation= ruleOperation EOF )
            // InternalExplicitOperations.g:187:2: iv_ruleOperation= ruleOperation EOF
            {
             newCompositeNode(grammarAccess.getOperationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleOperation=ruleOperation();

            state._fsp--;

             current =iv_ruleOperation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperation"


    // $ANTLR start "ruleOperation"
    // InternalExplicitOperations.g:193:1: ruleOperation returns [EObject current=null] : (otherlv_0= 'operation' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'inputs' ( (lv_inputs_3_0= ruleOperationParameter ) )* otherlv_4= 'output' ( (lv_output_5_0= ruleOperationParameter ) ) ) ;
    public final EObject ruleOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_inputs_3_0 = null;

        EObject lv_output_5_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:199:2: ( (otherlv_0= 'operation' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'inputs' ( (lv_inputs_3_0= ruleOperationParameter ) )* otherlv_4= 'output' ( (lv_output_5_0= ruleOperationParameter ) ) ) )
            // InternalExplicitOperations.g:200:2: (otherlv_0= 'operation' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'inputs' ( (lv_inputs_3_0= ruleOperationParameter ) )* otherlv_4= 'output' ( (lv_output_5_0= ruleOperationParameter ) ) )
            {
            // InternalExplicitOperations.g:200:2: (otherlv_0= 'operation' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'inputs' ( (lv_inputs_3_0= ruleOperationParameter ) )* otherlv_4= 'output' ( (lv_output_5_0= ruleOperationParameter ) ) )
            // InternalExplicitOperations.g:201:3: otherlv_0= 'operation' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'inputs' ( (lv_inputs_3_0= ruleOperationParameter ) )* otherlv_4= 'output' ( (lv_output_5_0= ruleOperationParameter ) )
            {
            otherlv_0=(Token)match(input,12,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationKeyword_0());
            		
            // InternalExplicitOperations.g:205:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalExplicitOperations.g:206:4: (lv_name_1_0= RULE_ID )
            {
            // InternalExplicitOperations.g:206:4: (lv_name_1_0= RULE_ID )
            // InternalExplicitOperations.g:207:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_5); 

            					newLeafNode(lv_name_1_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOperationRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            otherlv_2=(Token)match(input,13,FOLLOW_6); 

            			newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getInputsKeyword_2());
            		
            // InternalExplicitOperations.g:227:3: ( (lv_inputs_3_0= ruleOperationParameter ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_ID) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalExplicitOperations.g:228:4: (lv_inputs_3_0= ruleOperationParameter )
            	    {
            	    // InternalExplicitOperations.g:228:4: (lv_inputs_3_0= ruleOperationParameter )
            	    // InternalExplicitOperations.g:229:5: lv_inputs_3_0= ruleOperationParameter
            	    {

            	    					newCompositeNode(grammarAccess.getOperationAccess().getInputsOperationParameterParserRuleCall_3_0());
            	    				
            	    pushFollow(FOLLOW_6);
            	    lv_inputs_3_0=ruleOperationParameter();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getOperationRule());
            	    					}
            	    					add(
            	    						current,
            	    						"inputs",
            	    						lv_inputs_3_0,
            	    						"fr.mleduc.ExplicitOperations.OperationParameter");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            otherlv_4=(Token)match(input,14,FOLLOW_3); 

            			newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getOutputKeyword_4());
            		
            // InternalExplicitOperations.g:250:3: ( (lv_output_5_0= ruleOperationParameter ) )
            // InternalExplicitOperations.g:251:4: (lv_output_5_0= ruleOperationParameter )
            {
            // InternalExplicitOperations.g:251:4: (lv_output_5_0= ruleOperationParameter )
            // InternalExplicitOperations.g:252:5: lv_output_5_0= ruleOperationParameter
            {

            					newCompositeNode(grammarAccess.getOperationAccess().getOutputOperationParameterParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_2);
            lv_output_5_0=ruleOperationParameter();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getOperationRule());
            					}
            					set(
            						current,
            						"output",
            						lv_output_5_0,
            						"fr.mleduc.ExplicitOperations.OperationParameter");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperation"


    // $ANTLR start "entryRuleOperationParameter"
    // InternalExplicitOperations.g:273:1: entryRuleOperationParameter returns [EObject current=null] : iv_ruleOperationParameter= ruleOperationParameter EOF ;
    public final EObject entryRuleOperationParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationParameter = null;


        try {
            // InternalExplicitOperations.g:273:59: (iv_ruleOperationParameter= ruleOperationParameter EOF )
            // InternalExplicitOperations.g:274:2: iv_ruleOperationParameter= ruleOperationParameter EOF
            {
             newCompositeNode(grammarAccess.getOperationParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleOperationParameter=ruleOperationParameter();

            state._fsp--;

             current =iv_ruleOperationParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationParameter"


    // $ANTLR start "ruleOperationParameter"
    // InternalExplicitOperations.g:280:1: ruleOperationParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_cardinality_3_0= ruleCardinality ) ) ) ;
    public final EObject ruleOperationParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_cardinality_3_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:286:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_cardinality_3_0= ruleCardinality ) ) ) )
            // InternalExplicitOperations.g:287:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_cardinality_3_0= ruleCardinality ) ) )
            {
            // InternalExplicitOperations.g:287:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_cardinality_3_0= ruleCardinality ) ) )
            // InternalExplicitOperations.g:288:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_cardinality_3_0= ruleCardinality ) )
            {
            // InternalExplicitOperations.g:288:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalExplicitOperations.g:289:4: (lv_name_0_0= RULE_ID )
            {
            // InternalExplicitOperations.g:289:4: (lv_name_0_0= RULE_ID )
            // InternalExplicitOperations.g:290:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_7); 

            					newLeafNode(lv_name_0_0, grammarAccess.getOperationParameterAccess().getNameIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOperationParameterRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            otherlv_1=(Token)match(input,15,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getOperationParameterAccess().getColonKeyword_1());
            		
            // InternalExplicitOperations.g:310:3: ( (otherlv_2= RULE_ID ) )
            // InternalExplicitOperations.g:311:4: (otherlv_2= RULE_ID )
            {
            // InternalExplicitOperations.g:311:4: (otherlv_2= RULE_ID )
            // InternalExplicitOperations.g:312:5: otherlv_2= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOperationParameterRule());
            					}
            				
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_8); 

            					newLeafNode(otherlv_2, grammarAccess.getOperationParameterAccess().getTypeLanguageCrossReference_2_0());
            				

            }


            }

            // InternalExplicitOperations.g:323:3: ( (lv_cardinality_3_0= ruleCardinality ) )
            // InternalExplicitOperations.g:324:4: (lv_cardinality_3_0= ruleCardinality )
            {
            // InternalExplicitOperations.g:324:4: (lv_cardinality_3_0= ruleCardinality )
            // InternalExplicitOperations.g:325:5: lv_cardinality_3_0= ruleCardinality
            {

            					newCompositeNode(grammarAccess.getOperationParameterAccess().getCardinalityCardinalityParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_2);
            lv_cardinality_3_0=ruleCardinality();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getOperationParameterRule());
            					}
            					set(
            						current,
            						"cardinality",
            						lv_cardinality_3_0,
            						"fr.mleduc.ExplicitOperations.Cardinality");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationParameter"


    // $ANTLR start "entryRuleCardinality"
    // InternalExplicitOperations.g:346:1: entryRuleCardinality returns [EObject current=null] : iv_ruleCardinality= ruleCardinality EOF ;
    public final EObject entryRuleCardinality() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCardinality = null;


        try {
            // InternalExplicitOperations.g:346:52: (iv_ruleCardinality= ruleCardinality EOF )
            // InternalExplicitOperations.g:347:2: iv_ruleCardinality= ruleCardinality EOF
            {
             newCompositeNode(grammarAccess.getCardinalityRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCardinality=ruleCardinality();

            state._fsp--;

             current =iv_ruleCardinality; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalExplicitOperations.g:353:1: ruleCardinality returns [EObject current=null] : (otherlv_0= '[' ( (lv_start_1_0= ruleCardVal ) ) otherlv_2= '..' ( (lv_stop_3_0= ruleCardVal ) ) otherlv_4= ']' ) ;
    public final EObject ruleCardinality() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_start_1_0 = null;

        EObject lv_stop_3_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:359:2: ( (otherlv_0= '[' ( (lv_start_1_0= ruleCardVal ) ) otherlv_2= '..' ( (lv_stop_3_0= ruleCardVal ) ) otherlv_4= ']' ) )
            // InternalExplicitOperations.g:360:2: (otherlv_0= '[' ( (lv_start_1_0= ruleCardVal ) ) otherlv_2= '..' ( (lv_stop_3_0= ruleCardVal ) ) otherlv_4= ']' )
            {
            // InternalExplicitOperations.g:360:2: (otherlv_0= '[' ( (lv_start_1_0= ruleCardVal ) ) otherlv_2= '..' ( (lv_stop_3_0= ruleCardVal ) ) otherlv_4= ']' )
            // InternalExplicitOperations.g:361:3: otherlv_0= '[' ( (lv_start_1_0= ruleCardVal ) ) otherlv_2= '..' ( (lv_stop_3_0= ruleCardVal ) ) otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_9); 

            			newLeafNode(otherlv_0, grammarAccess.getCardinalityAccess().getLeftSquareBracketKeyword_0());
            		
            // InternalExplicitOperations.g:365:3: ( (lv_start_1_0= ruleCardVal ) )
            // InternalExplicitOperations.g:366:4: (lv_start_1_0= ruleCardVal )
            {
            // InternalExplicitOperations.g:366:4: (lv_start_1_0= ruleCardVal )
            // InternalExplicitOperations.g:367:5: lv_start_1_0= ruleCardVal
            {

            					newCompositeNode(grammarAccess.getCardinalityAccess().getStartCardValParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_10);
            lv_start_1_0=ruleCardVal();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCardinalityRule());
            					}
            					set(
            						current,
            						"start",
            						lv_start_1_0,
            						"fr.mleduc.ExplicitOperations.CardVal");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,17,FOLLOW_9); 

            			newLeafNode(otherlv_2, grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2());
            		
            // InternalExplicitOperations.g:388:3: ( (lv_stop_3_0= ruleCardVal ) )
            // InternalExplicitOperations.g:389:4: (lv_stop_3_0= ruleCardVal )
            {
            // InternalExplicitOperations.g:389:4: (lv_stop_3_0= ruleCardVal )
            // InternalExplicitOperations.g:390:5: lv_stop_3_0= ruleCardVal
            {

            					newCompositeNode(grammarAccess.getCardinalityAccess().getStopCardValParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_11);
            lv_stop_3_0=ruleCardVal();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCardinalityRule());
            					}
            					set(
            						current,
            						"stop",
            						lv_stop_3_0,
            						"fr.mleduc.ExplicitOperations.CardVal");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_4=(Token)match(input,18,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getCardinalityAccess().getRightSquareBracketKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleCardVal"
    // InternalExplicitOperations.g:415:1: entryRuleCardVal returns [EObject current=null] : iv_ruleCardVal= ruleCardVal EOF ;
    public final EObject entryRuleCardVal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCardVal = null;


        try {
            // InternalExplicitOperations.g:415:48: (iv_ruleCardVal= ruleCardVal EOF )
            // InternalExplicitOperations.g:416:2: iv_ruleCardVal= ruleCardVal EOF
            {
             newCompositeNode(grammarAccess.getCardValRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCardVal=ruleCardVal();

            state._fsp--;

             current =iv_ruleCardVal; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardVal"


    // $ANTLR start "ruleCardVal"
    // InternalExplicitOperations.g:422:1: ruleCardVal returns [EObject current=null] : ( ( () otherlv_1= '0' ) | ( () otherlv_3= '1' ) | ( () otherlv_5= '*' ) ) ;
    public final EObject ruleCardVal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;


        	enterRule();

        try {
            // InternalExplicitOperations.g:428:2: ( ( ( () otherlv_1= '0' ) | ( () otherlv_3= '1' ) | ( () otherlv_5= '*' ) ) )
            // InternalExplicitOperations.g:429:2: ( ( () otherlv_1= '0' ) | ( () otherlv_3= '1' ) | ( () otherlv_5= '*' ) )
            {
            // InternalExplicitOperations.g:429:2: ( ( () otherlv_1= '0' ) | ( () otherlv_3= '1' ) | ( () otherlv_5= '*' ) )
            int alt3=3;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt3=1;
                }
                break;
            case 20:
                {
                alt3=2;
                }
                break;
            case 21:
                {
                alt3=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalExplicitOperations.g:430:3: ( () otherlv_1= '0' )
                    {
                    // InternalExplicitOperations.g:430:3: ( () otherlv_1= '0' )
                    // InternalExplicitOperations.g:431:4: () otherlv_1= '0'
                    {
                    // InternalExplicitOperations.g:431:4: ()
                    // InternalExplicitOperations.g:432:5: 
                    {

                    					current = forceCreateModelElement(
                    						grammarAccess.getCardValAccess().getCardVal0Action_0_0(),
                    						current);
                    				

                    }

                    otherlv_1=(Token)match(input,19,FOLLOW_2); 

                    				newLeafNode(otherlv_1, grammarAccess.getCardValAccess().getDigitZeroKeyword_0_1());
                    			

                    }


                    }
                    break;
                case 2 :
                    // InternalExplicitOperations.g:444:3: ( () otherlv_3= '1' )
                    {
                    // InternalExplicitOperations.g:444:3: ( () otherlv_3= '1' )
                    // InternalExplicitOperations.g:445:4: () otherlv_3= '1'
                    {
                    // InternalExplicitOperations.g:445:4: ()
                    // InternalExplicitOperations.g:446:5: 
                    {

                    					current = forceCreateModelElement(
                    						grammarAccess.getCardValAccess().getCardVal1Action_1_0(),
                    						current);
                    				

                    }

                    otherlv_3=(Token)match(input,20,FOLLOW_2); 

                    				newLeafNode(otherlv_3, grammarAccess.getCardValAccess().getDigitOneKeyword_1_1());
                    			

                    }


                    }
                    break;
                case 3 :
                    // InternalExplicitOperations.g:458:3: ( () otherlv_5= '*' )
                    {
                    // InternalExplicitOperations.g:458:3: ( () otherlv_5= '*' )
                    // InternalExplicitOperations.g:459:4: () otherlv_5= '*'
                    {
                    // InternalExplicitOperations.g:459:4: ()
                    // InternalExplicitOperations.g:460:5: 
                    {

                    					current = forceCreateModelElement(
                    						grammarAccess.getCardValAccess().getCardValNAction_2_0(),
                    						current);
                    				

                    }

                    otherlv_5=(Token)match(input,21,FOLLOW_2); 

                    				newLeafNode(otherlv_5, grammarAccess.getCardValAccess().getAsteriskKeyword_2_1());
                    			

                    }


                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardVal"


    // $ANTLR start "entryRuleLanguage"
    // InternalExplicitOperations.g:475:1: entryRuleLanguage returns [EObject current=null] : iv_ruleLanguage= ruleLanguage EOF ;
    public final EObject entryRuleLanguage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLanguage = null;


        try {
            // InternalExplicitOperations.g:475:49: (iv_ruleLanguage= ruleLanguage EOF )
            // InternalExplicitOperations.g:476:2: iv_ruleLanguage= ruleLanguage EOF
            {
             newCompositeNode(grammarAccess.getLanguageRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLanguage=ruleLanguage();

            state._fsp--;

             current =iv_ruleLanguage; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLanguage"


    // $ANTLR start "ruleLanguage"
    // InternalExplicitOperations.g:482:1: ruleLanguage returns [EObject current=null] : (otherlv_0= 'language' ( (lv_name_1_0= RULE_ID ) ) ( (lv_dependencies_2_0= ruleLanguageDependency ) )* ) ;
    public final EObject ruleLanguage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        EObject lv_dependencies_2_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:488:2: ( (otherlv_0= 'language' ( (lv_name_1_0= RULE_ID ) ) ( (lv_dependencies_2_0= ruleLanguageDependency ) )* ) )
            // InternalExplicitOperations.g:489:2: (otherlv_0= 'language' ( (lv_name_1_0= RULE_ID ) ) ( (lv_dependencies_2_0= ruleLanguageDependency ) )* )
            {
            // InternalExplicitOperations.g:489:2: (otherlv_0= 'language' ( (lv_name_1_0= RULE_ID ) ) ( (lv_dependencies_2_0= ruleLanguageDependency ) )* )
            // InternalExplicitOperations.g:490:3: otherlv_0= 'language' ( (lv_name_1_0= RULE_ID ) ) ( (lv_dependencies_2_0= ruleLanguageDependency ) )*
            {
            otherlv_0=(Token)match(input,22,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getLanguageAccess().getLanguageKeyword_0());
            		
            // InternalExplicitOperations.g:494:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalExplicitOperations.g:495:4: (lv_name_1_0= RULE_ID )
            {
            // InternalExplicitOperations.g:495:4: (lv_name_1_0= RULE_ID )
            // InternalExplicitOperations.g:496:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_12); 

            					newLeafNode(lv_name_1_0, grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLanguageRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            // InternalExplicitOperations.g:512:3: ( (lv_dependencies_2_0= ruleLanguageDependency ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==RULE_ID) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalExplicitOperations.g:513:4: (lv_dependencies_2_0= ruleLanguageDependency )
            	    {
            	    // InternalExplicitOperations.g:513:4: (lv_dependencies_2_0= ruleLanguageDependency )
            	    // InternalExplicitOperations.g:514:5: lv_dependencies_2_0= ruleLanguageDependency
            	    {

            	    					newCompositeNode(grammarAccess.getLanguageAccess().getDependenciesLanguageDependencyParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_12);
            	    lv_dependencies_2_0=ruleLanguageDependency();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getLanguageRule());
            	    					}
            	    					add(
            	    						current,
            	    						"dependencies",
            	    						lv_dependencies_2_0,
            	    						"fr.mleduc.ExplicitOperations.LanguageDependency");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLanguage"


    // $ANTLR start "entryRuleLanguageDependency"
    // InternalExplicitOperations.g:535:1: entryRuleLanguageDependency returns [EObject current=null] : iv_ruleLanguageDependency= ruleLanguageDependency EOF ;
    public final EObject entryRuleLanguageDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLanguageDependency = null;


        try {
            // InternalExplicitOperations.g:535:59: (iv_ruleLanguageDependency= ruleLanguageDependency EOF )
            // InternalExplicitOperations.g:536:2: iv_ruleLanguageDependency= ruleLanguageDependency EOF
            {
             newCompositeNode(grammarAccess.getLanguageDependencyRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLanguageDependency=ruleLanguageDependency();

            state._fsp--;

             current =iv_ruleLanguageDependency; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLanguageDependency"


    // $ANTLR start "ruleLanguageDependency"
    // InternalExplicitOperations.g:542:1: ruleLanguageDependency returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleLanguageDependency() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalExplicitOperations.g:548:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalExplicitOperations.g:549:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalExplicitOperations.g:549:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) )
            // InternalExplicitOperations.g:550:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )
            {
            // InternalExplicitOperations.g:550:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalExplicitOperations.g:551:4: (lv_name_0_0= RULE_ID )
            {
            // InternalExplicitOperations.g:551:4: (lv_name_0_0= RULE_ID )
            // InternalExplicitOperations.g:552:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_7); 

            					newLeafNode(lv_name_0_0, grammarAccess.getLanguageDependencyAccess().getNameIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLanguageDependencyRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            otherlv_1=(Token)match(input,15,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getLanguageDependencyAccess().getColonKeyword_1());
            		
            // InternalExplicitOperations.g:572:3: ( (otherlv_2= RULE_ID ) )
            // InternalExplicitOperations.g:573:4: (otherlv_2= RULE_ID )
            {
            // InternalExplicitOperations.g:573:4: (otherlv_2= RULE_ID )
            // InternalExplicitOperations.g:574:5: otherlv_2= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLanguageDependencyRule());
            					}
            				
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); 

            					newLeafNode(otherlv_2, grammarAccess.getLanguageDependencyAccess().getTypeLanguageCrossReference_2_0());
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLanguageDependency"


    // $ANTLR start "entryRuleArtifact"
    // InternalExplicitOperations.g:589:1: entryRuleArtifact returns [EObject current=null] : iv_ruleArtifact= ruleArtifact EOF ;
    public final EObject entryRuleArtifact() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArtifact = null;


        try {
            // InternalExplicitOperations.g:589:49: (iv_ruleArtifact= ruleArtifact EOF )
            // InternalExplicitOperations.g:590:2: iv_ruleArtifact= ruleArtifact EOF
            {
             newCompositeNode(grammarAccess.getArtifactRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleArtifact=ruleArtifact();

            state._fsp--;

             current =iv_ruleArtifact; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArtifact"


    // $ANTLR start "ruleArtifact"
    // InternalExplicitOperations.g:596:1: ruleArtifact returns [EObject current=null] : (otherlv_0= 'artifact' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) ) ) ;
    public final EObject ruleArtifact() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalExplicitOperations.g:602:2: ( (otherlv_0= 'artifact' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) ) ) )
            // InternalExplicitOperations.g:603:2: (otherlv_0= 'artifact' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) ) )
            {
            // InternalExplicitOperations.g:603:2: (otherlv_0= 'artifact' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) ) )
            // InternalExplicitOperations.g:604:3: otherlv_0= 'artifact' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,23,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getArtifactAccess().getArtifactKeyword_0());
            		
            // InternalExplicitOperations.g:608:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalExplicitOperations.g:609:4: (lv_name_1_0= RULE_ID )
            {
            // InternalExplicitOperations.g:609:4: (lv_name_1_0= RULE_ID )
            // InternalExplicitOperations.g:610:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); 

            					newLeafNode(lv_name_1_0, grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getArtifactRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            otherlv_2=(Token)match(input,15,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getArtifactAccess().getColonKeyword_2());
            		
            // InternalExplicitOperations.g:630:3: ( (otherlv_3= RULE_ID ) )
            // InternalExplicitOperations.g:631:4: (otherlv_3= RULE_ID )
            {
            // InternalExplicitOperations.g:631:4: (otherlv_3= RULE_ID )
            // InternalExplicitOperations.g:632:5: otherlv_3= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getArtifactRule());
            					}
            				
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); 

            					newLeafNode(otherlv_3, grammarAccess.getArtifactAccess().getTypeLanguageCrossReference_3_0());
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArtifact"


    // $ANTLR start "entryRuleComposition"
    // InternalExplicitOperations.g:647:1: entryRuleComposition returns [EObject current=null] : iv_ruleComposition= ruleComposition EOF ;
    public final EObject entryRuleComposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComposition = null;


        try {
            // InternalExplicitOperations.g:647:52: (iv_ruleComposition= ruleComposition EOF )
            // InternalExplicitOperations.g:648:2: iv_ruleComposition= ruleComposition EOF
            {
             newCompositeNode(grammarAccess.getCompositionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleComposition=ruleComposition();

            state._fsp--;

             current =iv_ruleComposition; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComposition"


    // $ANTLR start "ruleComposition"
    // InternalExplicitOperations.g:654:1: ruleComposition returns [EObject current=null] : (otherlv_0= 'composition' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '::' ( (otherlv_3= RULE_ID ) ) otherlv_4= '[' ( (lv_parameters_5_0= ruleCompositionParameter ) )* otherlv_6= ']' ) ;
    public final EObject ruleComposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalExplicitOperations.g:660:2: ( (otherlv_0= 'composition' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '::' ( (otherlv_3= RULE_ID ) ) otherlv_4= '[' ( (lv_parameters_5_0= ruleCompositionParameter ) )* otherlv_6= ']' ) )
            // InternalExplicitOperations.g:661:2: (otherlv_0= 'composition' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '::' ( (otherlv_3= RULE_ID ) ) otherlv_4= '[' ( (lv_parameters_5_0= ruleCompositionParameter ) )* otherlv_6= ']' )
            {
            // InternalExplicitOperations.g:661:2: (otherlv_0= 'composition' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '::' ( (otherlv_3= RULE_ID ) ) otherlv_4= '[' ( (lv_parameters_5_0= ruleCompositionParameter ) )* otherlv_6= ']' )
            // InternalExplicitOperations.g:662:3: otherlv_0= 'composition' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '::' ( (otherlv_3= RULE_ID ) ) otherlv_4= '[' ( (lv_parameters_5_0= ruleCompositionParameter ) )* otherlv_6= ']'
            {
            otherlv_0=(Token)match(input,24,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getCompositionAccess().getCompositionKeyword_0());
            		
            // InternalExplicitOperations.g:666:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalExplicitOperations.g:667:4: (lv_name_1_0= RULE_ID )
            {
            // InternalExplicitOperations.g:667:4: (lv_name_1_0= RULE_ID )
            // InternalExplicitOperations.g:668:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_13); 

            					newLeafNode(lv_name_1_0, grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCompositionRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.ID");
            				

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getCompositionAccess().getColonColonKeyword_2());
            		
            // InternalExplicitOperations.g:688:3: ( (otherlv_3= RULE_ID ) )
            // InternalExplicitOperations.g:689:4: (otherlv_3= RULE_ID )
            {
            // InternalExplicitOperations.g:689:4: (otherlv_3= RULE_ID )
            // InternalExplicitOperations.g:690:5: otherlv_3= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCompositionRule());
            					}
            				
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_8); 

            					newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getOperationOperationCrossReference_3_0());
            				

            }


            }

            otherlv_4=(Token)match(input,16,FOLLOW_14); 

            			newLeafNode(otherlv_4, grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_4());
            		
            // InternalExplicitOperations.g:705:3: ( (lv_parameters_5_0= ruleCompositionParameter ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ID) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalExplicitOperations.g:706:4: (lv_parameters_5_0= ruleCompositionParameter )
            	    {
            	    // InternalExplicitOperations.g:706:4: (lv_parameters_5_0= ruleCompositionParameter )
            	    // InternalExplicitOperations.g:707:5: lv_parameters_5_0= ruleCompositionParameter
            	    {

            	    					newCompositeNode(grammarAccess.getCompositionAccess().getParametersCompositionParameterParserRuleCall_5_0());
            	    				
            	    pushFollow(FOLLOW_14);
            	    lv_parameters_5_0=ruleCompositionParameter();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getCompositionRule());
            	    					}
            	    					add(
            	    						current,
            	    						"parameters",
            	    						lv_parameters_5_0,
            	    						"fr.mleduc.ExplicitOperations.CompositionParameter");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            otherlv_6=(Token)match(input,18,FOLLOW_2); 

            			newLeafNode(otherlv_6, grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_6());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComposition"


    // $ANTLR start "entryRuleCompositionParameter"
    // InternalExplicitOperations.g:732:1: entryRuleCompositionParameter returns [EObject current=null] : iv_ruleCompositionParameter= ruleCompositionParameter EOF ;
    public final EObject entryRuleCompositionParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositionParameter = null;


        try {
            // InternalExplicitOperations.g:732:61: (iv_ruleCompositionParameter= ruleCompositionParameter EOF )
            // InternalExplicitOperations.g:733:2: iv_ruleCompositionParameter= ruleCompositionParameter EOF
            {
             newCompositeNode(grammarAccess.getCompositionParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCompositionParameter=ruleCompositionParameter();

            state._fsp--;

             current =iv_ruleCompositionParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositionParameter"


    // $ANTLR start "ruleCompositionParameter"
    // InternalExplicitOperations.g:739:1: ruleCompositionParameter returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=>' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleCompositionParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalExplicitOperations.g:745:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=>' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalExplicitOperations.g:746:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=>' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalExplicitOperations.g:746:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=>' ( (otherlv_2= RULE_ID ) ) )
            // InternalExplicitOperations.g:747:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '=>' ( (otherlv_2= RULE_ID ) )
            {
            // InternalExplicitOperations.g:747:3: ( (otherlv_0= RULE_ID ) )
            // InternalExplicitOperations.g:748:4: (otherlv_0= RULE_ID )
            {
            // InternalExplicitOperations.g:748:4: (otherlv_0= RULE_ID )
            // InternalExplicitOperations.g:749:5: otherlv_0= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCompositionParameterRule());
            					}
            				
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_15); 

            					newLeafNode(otherlv_0, grammarAccess.getCompositionParameterAccess().getNameOperationParameterCrossReference_0_0());
            				

            }


            }

            otherlv_1=(Token)match(input,26,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getCompositionParameterAccess().getEqualsSignGreaterThanSignKeyword_1());
            		
            // InternalExplicitOperations.g:764:3: ( (otherlv_2= RULE_ID ) )
            // InternalExplicitOperations.g:765:4: (otherlv_2= RULE_ID )
            {
            // InternalExplicitOperations.g:765:4: (otherlv_2= RULE_ID )
            // InternalExplicitOperations.g:766:5: otherlv_2= RULE_ID
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCompositionParameterRule());
            					}
            				
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); 

            					newLeafNode(otherlv_2, grammarAccess.getCompositionParameterAccess().getArtifactReferentiableCrossReference_2_0());
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositionParameter"

    // Delegated rules


 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000001C01002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000004010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000380000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000040010L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000004000000L});

}