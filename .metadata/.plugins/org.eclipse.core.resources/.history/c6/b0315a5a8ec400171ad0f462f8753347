/**
 * generated by Xtext 2.10.0
 */
package fr.mleduc.explicitOperations.impl;

import fr.mleduc.explicitOperations.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ExplicitOperationsFactoryImpl extends EFactoryImpl implements ExplicitOperationsFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ExplicitOperationsFactory init()
  {
    try
    {
      ExplicitOperationsFactory theExplicitOperationsFactory = (ExplicitOperationsFactory)EPackage.Registry.INSTANCE.getEFactory(ExplicitOperationsPackage.eNS_URI);
      if (theExplicitOperationsFactory != null)
      {
        return theExplicitOperationsFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ExplicitOperationsFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExplicitOperationsFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ExplicitOperationsPackage.MODEL: return createModel();
      case ExplicitOperationsPackage.OPERATION: return createOperation();
      case ExplicitOperationsPackage.OPERATION_PARAMETER: return createOperationParameter();
      case ExplicitOperationsPackage.CARDINALITY: return createCardinality();
      case ExplicitOperationsPackage.CARD_VAL: return createCardVal();
      case ExplicitOperationsPackage.LANGUAGE: return createLanguage();
      case ExplicitOperationsPackage.LANGUAGE_DEPENDENCY: return createLanguageDependency();
      case ExplicitOperationsPackage.ARTIFACT: return createArtifact();
      case ExplicitOperationsPackage.REFERENTIABLE: return createReferentiable();
      case ExplicitOperationsPackage.COMPOSITION: return createComposition();
      case ExplicitOperationsPackage.COMPOSITION_PARAMETER: return createCompositionParameter();
      case ExplicitOperationsPackage.CARD_VAL0: return createCardVal0();
      case ExplicitOperationsPackage.CARD_VAL1: return createCardVal1();
      case ExplicitOperationsPackage.CARD_VAL_N: return createCardValN();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operation createOperation()
  {
    OperationImpl operation = new OperationImpl();
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OperationParameter createOperationParameter()
  {
    OperationParameterImpl operationParameter = new OperationParameterImpl();
    return operationParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cardinality createCardinality()
  {
    CardinalityImpl cardinality = new CardinalityImpl();
    return cardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CardVal createCardVal()
  {
    CardValImpl cardVal = new CardValImpl();
    return cardVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Language createLanguage()
  {
    LanguageImpl language = new LanguageImpl();
    return language;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LanguageDependency createLanguageDependency()
  {
    LanguageDependencyImpl languageDependency = new LanguageDependencyImpl();
    return languageDependency;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Artifact createArtifact()
  {
    ArtifactImpl artifact = new ArtifactImpl();
    return artifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Referentiable createReferentiable()
  {
    ReferentiableImpl referentiable = new ReferentiableImpl();
    return referentiable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Composition createComposition()
  {
    CompositionImpl composition = new CompositionImpl();
    return composition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CompositionParameter createCompositionParameter()
  {
    CompositionParameterImpl compositionParameter = new CompositionParameterImpl();
    return compositionParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CardVal0 createCardVal0()
  {
    CardVal0Impl cardVal0 = new CardVal0Impl();
    return cardVal0;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CardVal1 createCardVal1()
  {
    CardVal1Impl cardVal1 = new CardVal1Impl();
    return cardVal1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CardValN createCardValN()
  {
    CardValNImpl cardValN = new CardValNImpl();
    return cardValN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExplicitOperationsPackage getExplicitOperationsPackage()
  {
    return (ExplicitOperationsPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ExplicitOperationsPackage getPackage()
  {
    return ExplicitOperationsPackage.eINSTANCE;
  }

} //ExplicitOperationsFactoryImpl
