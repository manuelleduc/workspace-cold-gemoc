/*
 * generated by Xtext 2.10.0
 */
package varadd.cs.tests

import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import varadd.varaddlang.exprconcern.Expr
import varadd.rev.VarAddEvalRev


@RunWith(XtextRunner)
@InjectWith(VarAddLangInjectorProvider)
class VarAddLangParsingTest{

	@Inject
	ParseHelper<Expr> parseHelper

	@Test
	def void load1() {
		val Expr result = parseHelper.parse('''
			a
		''')
		Assert.assertNotNull(result)

		val rev = new VarAddEvalRev() {
		}
		val op = rev.$(result)
		val res = op.eval(newHashMap("a" -> 1L))
		Assert.assertEquals(1, res)
	}

	@Test
	def void load12() {
		val result = parseHelper.parse('''
			a + b
		''')
		Assert.assertNotNull(result)

		val rev = new VarAddEvalRev() {
		}
		val op = rev.$(result)
		val res = op.eval(newHashMap("a" -> 1L, "b" -> 2L))
		Assert.assertEquals(3, res)
	}

	@Test
	def void load123() {
		val result = parseHelper.parse('''
			a + b + c 
		''')
		Assert.assertNotNull(result)

		val rev = new VarAddEvalRev() {
		}
		val op = rev.$(result)
		val res = op.eval(newHashMap("a" -> 1L, "b" -> 3L, "c" -> 2L))
		Assert.assertEquals(6, res)
	}

}
