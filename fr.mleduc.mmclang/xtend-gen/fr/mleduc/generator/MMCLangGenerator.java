/**
 * generated by Xtext 2.10.0
 */
package fr.mleduc.generator;

import com.google.inject.Inject;
import fr.mleduc.generator.Compose;
import fr.mleduc.generator.PrettyPrint;
import fr.mleduc.mMCLang.Composition;
import fr.mleduc.mMLang.Metamodel;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MMCLangGenerator extends AbstractGenerator {
  @Inject
  @Extension
  private Compose _compose;
  
  @Inject
  @Extension
  private PrettyPrint _prettyPrint;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    TreeIterator<EObject> _allContents = resource.getAllContents();
    EObject _head = IteratorExtensions.<EObject>head(_allContents);
    final Composition mm = ((Composition) _head);
    StringConcatenation _builder = new StringConcatenation();
    String _name = mm.getName();
    _builder.append(_name, "");
    _builder.append(".mmlang");
    Metamodel _reduce = this._compose.reduce(mm);
    CharSequence _print = this._prettyPrint.print(_reduce);
    fsa.generateFile(_builder.toString(), _print);
  }
}
