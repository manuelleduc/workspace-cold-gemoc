/*
 * generated by Xtext 2.10.0
 */
package fr.mleduc.scoping

import fr.mleduc.mMCLang.MMCLangPackage
import fr.mleduc.mMCLang.Operation
import fr.mleduc.mMCLang.Slice
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.resource.EObjectDescription
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.impl.MapBasedScope

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class MMCLangScopeProvider extends AbstractMMCLangScopeProvider {
	override IScope getScope(EObject context, EReference reference) {

		if (reference == MMCLangPackage::eINSTANCE.pair_From) {
			MapBasedScope::createScope(super.getScope(context, reference), (context.eContainer as Operation).metamodel.
				classes.map[EObjectDescription::create(it.name, it)])
		} else if (reference == MMCLangPackage::eINSTANCE.slice_Targets) {
			MapBasedScope::createScope(super.getScope(context, reference), (context as Slice).metamodel.
				classes.map[EObjectDescription::create(it.name, it)])
		} else {
			super.getScope(context, reference)
		}
	}
}
