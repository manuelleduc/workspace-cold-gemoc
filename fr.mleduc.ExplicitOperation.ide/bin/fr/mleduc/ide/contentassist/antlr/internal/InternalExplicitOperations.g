/*
 * generated by Xtext 2.10.0
 */
grammar InternalExplicitOperations;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.mleduc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.mleduc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.mleduc.services.ExplicitOperationsGrammarAccess;

}
@parser::members {
	private ExplicitOperationsGrammarAccess grammarAccess;

	public void setGrammarAccess(ExplicitOperationsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureModel
entryRuleFeatureModel
:
{ before(grammarAccess.getFeatureModelRule()); }
	 ruleFeatureModel
{ after(grammarAccess.getFeatureModelRule()); } 
	 EOF 
;

// Rule FeatureModel
ruleFeatureModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureModelAccess().getGroup()); }
		(rule__FeatureModel__Group__0)
		{ after(grammarAccess.getFeatureModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
		(rule__Feature__Alternatives)
		{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicFeature
entryRuleAtomicFeature
:
{ before(grammarAccess.getAtomicFeatureRule()); }
	 ruleAtomicFeature
{ after(grammarAccess.getAtomicFeatureRule()); } 
	 EOF 
;

// Rule AtomicFeature
ruleAtomicFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicFeatureAccess().getGroup()); }
		(rule__AtomicFeature__Group__0)
		{ after(grammarAccess.getAtomicFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOneOf
entryRuleOneOf
:
{ before(grammarAccess.getOneOfRule()); }
	 ruleOneOf
{ after(grammarAccess.getOneOfRule()); } 
	 EOF 
;

// Rule OneOf
ruleOneOf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOneOfAccess().getGroup()); }
		(rule__OneOf__Group__0)
		{ after(grammarAccess.getOneOfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSomeOf
entryRuleSomeOf
:
{ before(grammarAccess.getSomeOfRule()); }
	 ruleSomeOf
{ after(grammarAccess.getSomeOfRule()); } 
	 EOF 
;

// Rule SomeOf
ruleSomeOf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSomeOfAccess().getGroup()); }
		(rule__SomeOf__Group__0)
		{ after(grammarAccess.getSomeOfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposition
entryRuleProposition
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropositionAccess().getEquivParserRuleCall()); }
		ruleEquiv
		{ after(grammarAccess.getPropositionAccess().getEquivParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquiv
entryRuleEquiv
:
{ before(grammarAccess.getEquivRule()); }
	 ruleEquiv
{ after(grammarAccess.getEquivRule()); } 
	 EOF 
;

// Rule Equiv
ruleEquiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquivAccess().getGroup()); }
		(rule__Equiv__Group__0)
		{ after(grammarAccess.getEquivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImply
entryRuleImply
:
{ before(grammarAccess.getImplyRule()); }
	 ruleImply
{ after(grammarAccess.getImplyRule()); } 
	 EOF 
;

// Rule Imply
ruleImply 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplyAccess().getGroup()); }
		(rule__Imply__Group__0)
		{ after(grammarAccess.getImplyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationParameter
entryRuleOperationParameter
:
{ before(grammarAccess.getOperationParameterRule()); }
	 ruleOperationParameter
{ after(grammarAccess.getOperationParameterRule()); } 
	 EOF 
;

// Rule OperationParameter
ruleOperationParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationParameterAccess().getGroup()); }
		(rule__OperationParameter__Group__0)
		{ after(grammarAccess.getOperationParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardinality
entryRuleCardinality
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardinalityAccess().getGroup()); }
		(rule__Cardinality__Group__0)
		{ after(grammarAccess.getCardinalityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardVal
entryRuleCardVal
:
{ before(grammarAccess.getCardValRule()); }
	 ruleCardVal
{ after(grammarAccess.getCardValRule()); } 
	 EOF 
;

// Rule CardVal
ruleCardVal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardValAccess().getAlternatives()); }
		(rule__CardVal__Alternatives)
		{ after(grammarAccess.getCardValAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguage
entryRuleLanguage
:
{ before(grammarAccess.getLanguageRule()); }
	 ruleLanguage
{ after(grammarAccess.getLanguageRule()); } 
	 EOF 
;

// Rule Language
ruleLanguage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageAccess().getGroup()); }
		(rule__Language__Group__0)
		{ after(grammarAccess.getLanguageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageDependency
entryRuleLanguageDependency
:
{ before(grammarAccess.getLanguageDependencyRule()); }
	 ruleLanguageDependency
{ after(grammarAccess.getLanguageDependencyRule()); } 
	 EOF 
;

// Rule LanguageDependency
ruleLanguageDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageDependencyAccess().getGroup()); }
		(rule__LanguageDependency__Group__0)
		{ after(grammarAccess.getLanguageDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArtifact
entryRuleArtifact
:
{ before(grammarAccess.getArtifactRule()); }
	 ruleArtifact
{ after(grammarAccess.getArtifactRule()); } 
	 EOF 
;

// Rule Artifact
ruleArtifact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtifactAccess().getGroup()); }
		(rule__Artifact__Group__0)
		{ after(grammarAccess.getArtifactAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArtifactParameter
entryRuleArtifactParameter
:
{ before(grammarAccess.getArtifactParameterRule()); }
	 ruleArtifactParameter
{ after(grammarAccess.getArtifactParameterRule()); } 
	 EOF 
;

// Rule ArtifactParameter
ruleArtifactParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtifactParameterAccess().getGroup()); }
		(rule__ArtifactParameter__Group__0)
		{ after(grammarAccess.getArtifactParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionParameter
entryRuleCompositionParameter
:
{ before(grammarAccess.getCompositionParameterRule()); }
	 ruleCompositionParameter
{ after(grammarAccess.getCompositionParameterRule()); } 
	 EOF 
;

// Rule CompositionParameter
ruleCompositionParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionParameterAccess().getGroup()); }
		(rule__CompositionParameter__Group__0)
		{ after(grammarAccess.getCompositionParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLanguagesAssignment_2_0()); }
		(rule__Model__LanguagesAssignment_2_0)
		{ after(grammarAccess.getModelAccess().getLanguagesAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getOperationsAssignment_2_1()); }
		(rule__Model__OperationsAssignment_2_1)
		{ after(grammarAccess.getModelAccess().getOperationsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getArtifactsAssignment_2_2()); }
		(rule__Model__ArtifactsAssignment_2_2)
		{ after(grammarAccess.getModelAccess().getArtifactsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getCompositionsAssignment_2_3()); }
		(rule__Model__CompositionsAssignment_2_3)
		{ after(grammarAccess.getModelAccess().getCompositionsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getFeatureModelsAssignment_2_4()); }
		(rule__Model__FeatureModelsAssignment_2_4)
		{ after(grammarAccess.getModelAccess().getFeatureModelsAssignment_2_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAtomicFeatureParserRuleCall_0()); }
		ruleAtomicFeature
		{ after(grammarAccess.getFeatureAccess().getAtomicFeatureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getOneOfParserRuleCall_1()); }
		ruleOneOf
		{ after(grammarAccess.getFeatureAccess().getOneOfParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getSomeOfParserRuleCall_2()); }
		ruleSomeOf
		{ after(grammarAccess.getFeatureAccess().getSomeOfParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardValAccess().getGroup_0()); }
		(rule__CardVal__Group_0__0)
		{ after(grammarAccess.getCardValAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardValAccess().getGroup_1()); }
		(rule__CardVal__Group_1__0)
		{ after(grammarAccess.getCardValAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCardValAccess().getGroup_2()); }
		(rule__CardVal__Group_2__0)
		{ after(grammarAccess.getCardValAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_2()); }
	(rule__Model__Alternatives_2)*
	{ after(grammarAccess.getModelAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureModel__Group__0__Impl
	rule__FeatureModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureModelAccess().getFMKeyword_0()); }
	'FM'
	{ after(grammarAccess.getFeatureModelAccess().getFMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureModel__Group__1__Impl
	rule__FeatureModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureModelAccess().getNameAssignment_1()); }
	(rule__FeatureModel__NameAssignment_1)
	{ after(grammarAccess.getFeatureModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureModelAccess().getFeatureAssignment_2()); }
	(rule__FeatureModel__FeatureAssignment_2)
	{ after(grammarAccess.getFeatureModelAccess().getFeatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group__0__Impl
	rule__AtomicFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getAtomicFeatureAction_0()); }
	()
	{ after(grammarAccess.getAtomicFeatureAccess().getAtomicFeatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group__1__Impl
	rule__AtomicFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getOptionalAssignment_1()); }
	(rule__AtomicFeature__OptionalAssignment_1)?
	{ after(grammarAccess.getAtomicFeatureAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group__2__Impl
	rule__AtomicFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getFeatureKeyword_2()); }
	'feature'
	{ after(grammarAccess.getAtomicFeatureAccess().getFeatureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group__3__Impl
	rule__AtomicFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getNameAssignment_3()); }
	(rule__AtomicFeature__NameAssignment_3)
	{ after(grammarAccess.getAtomicFeatureAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getGroup_4()); }
	(rule__AtomicFeature__Group_4__0)?
	{ after(grammarAccess.getAtomicFeatureAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicFeature__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group_4__0__Impl
	rule__AtomicFeature__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getAtomicFeatureAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group_4__1__Impl
	rule__AtomicFeature__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getConstraintsAssignment_4_1()); }
	(rule__AtomicFeature__ConstraintsAssignment_4_1)
	{ after(grammarAccess.getAtomicFeatureAccess().getConstraintsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicFeature__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicFeatureAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getAtomicFeatureAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OneOf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__0__Impl
	rule__OneOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOneOfAction_0()); }
	()
	{ after(grammarAccess.getOneOfAccess().getOneOfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__1__Impl
	rule__OneOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOptionalAssignment_1()); }
	(rule__OneOf__OptionalAssignment_1)?
	{ after(grammarAccess.getOneOfAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__2__Impl
	rule__OneOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getOneOfKeyword_2()); }
	'oneOf'
	{ after(grammarAccess.getOneOfAccess().getOneOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__3__Impl
	rule__OneOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getNameAssignment_3()); }
	(rule__OneOf__NameAssignment_3)
	{ after(grammarAccess.getOneOfAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__4__Impl
	rule__OneOf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getOneOfAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__5__Impl
	rule__OneOf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getChildrenAssignment_5()); }
	(rule__OneOf__ChildrenAssignment_5)*
	{ after(grammarAccess.getOneOfAccess().getChildrenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__6__Impl
	rule__OneOf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getOneOfAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getGroup_7()); }
	(rule__OneOf__Group_7__0)?
	{ after(grammarAccess.getOneOfAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OneOf__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group_7__0__Impl
	rule__OneOf__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getOneOfAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group_7__1__Impl
	rule__OneOf__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getConstraintsAssignment_7_1()); }
	(rule__OneOf__ConstraintsAssignment_7_1)
	{ after(grammarAccess.getOneOfAccess().getConstraintsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OneOf__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOneOfAccess().getRightParenthesisKeyword_7_2()); }
	')'
	{ after(grammarAccess.getOneOfAccess().getRightParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SomeOf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__0__Impl
	rule__SomeOf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getSomeOfAction_0()); }
	()
	{ after(grammarAccess.getSomeOfAccess().getSomeOfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__1__Impl
	rule__SomeOf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getOptionalAssignment_1()); }
	(rule__SomeOf__OptionalAssignment_1)?
	{ after(grammarAccess.getSomeOfAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__2__Impl
	rule__SomeOf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getSomeOfKeyword_2()); }
	'someOf'
	{ after(grammarAccess.getSomeOfAccess().getSomeOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__3__Impl
	rule__SomeOf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getNameAssignment_3()); }
	(rule__SomeOf__NameAssignment_3)
	{ after(grammarAccess.getSomeOfAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__4__Impl
	rule__SomeOf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getSomeOfAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__5__Impl
	rule__SomeOf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getChildrenAssignment_5()); }
	(rule__SomeOf__ChildrenAssignment_5)*
	{ after(grammarAccess.getSomeOfAccess().getChildrenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__6__Impl
	rule__SomeOf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getSomeOfAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getGroup_7()); }
	(rule__SomeOf__Group_7__0)?
	{ after(grammarAccess.getSomeOfAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SomeOf__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group_7__0__Impl
	rule__SomeOf__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getSomeOfAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group_7__1__Impl
	rule__SomeOf__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getConstraintsAssignment_7_1()); }
	(rule__SomeOf__ConstraintsAssignment_7_1)
	{ after(grammarAccess.getSomeOfAccess().getConstraintsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SomeOf__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSomeOfAccess().getRightParenthesisKeyword_7_2()); }
	')'
	{ after(grammarAccess.getSomeOfAccess().getRightParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group__0__Impl
	rule__Equiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getImplyParserRuleCall_0()); }
	ruleImply
	{ after(grammarAccess.getEquivAccess().getImplyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getGroup_1()); }
	(rule__Equiv__Group_1__0)*
	{ after(grammarAccess.getEquivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__0__Impl
	rule__Equiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getEquivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEquivAccess().getEquivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__1__Impl
	rule__Equiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
	'<=>'
	{ after(grammarAccess.getEquivAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquivAccess().getRightAssignment_1_2()); }
	(rule__Equiv__RightAssignment_1_2)
	{ after(grammarAccess.getEquivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imply__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group__0__Impl
	rule__Imply__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getImplyAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getGroup_1()); }
	(rule__Imply__Group_1__0)*
	{ after(grammarAccess.getImplyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imply__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__0__Impl
	rule__Imply__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getImplyLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImplyAccess().getImplyLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__1__Impl
	rule__Imply__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
	'=>'
	{ after(grammarAccess.getImplyAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imply__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyAccess().getRightAssignment_1_2()); }
	(rule__Imply__RightAssignment_1_2)
	{ after(grammarAccess.getImplyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPropositionParserRuleCall_0_1()); }
	ruleProposition
	{ after(grammarAccess.getPrimaryAccess().getPropositionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNextAssignment_1_2()); }
	(rule__Primary__NextAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getNextAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getVariableAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getVariableAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRefAssignment_2_1()); }
	(rule__Primary__RefAssignment_2_1)
	{ after(grammarAccess.getPrimaryAccess().getRefAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperationKeyword_0()); }
	'operation'
	{ after(grammarAccess.getOperationAccess().getOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNameAssignment_1()); }
	(rule__Operation__NameAssignment_1)
	{ after(grammarAccess.getOperationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getInputsKeyword_2()); }
	'inputs'
	{ after(grammarAccess.getOperationAccess().getInputsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getInputsAssignment_3()); }
	(rule__Operation__InputsAssignment_3)*
	{ after(grammarAccess.getOperationAccess().getInputsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOutputKeyword_4()); }
	'output'
	{ after(grammarAccess.getOperationAccess().getOutputKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOutputAssignment_5()); }
	(rule__Operation__OutputAssignment_5)
	{ after(grammarAccess.getOperationAccess().getOutputAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameter__Group__0__Impl
	rule__OperationParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterAccess().getNameAssignment_0()); }
	(rule__OperationParameter__NameAssignment_0)
	{ after(grammarAccess.getOperationParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameter__Group__1__Impl
	rule__OperationParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOperationParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameter__Group__2__Impl
	rule__OperationParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterAccess().getTypeAssignment_2()); }
	(rule__OperationParameter__TypeAssignment_2)
	{ after(grammarAccess.getOperationParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterAccess().getCardinalityAssignment_3()); }
	(rule__OperationParameter__CardinalityAssignment_3)
	{ after(grammarAccess.getOperationParameterAccess().getCardinalityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinality__Group__0__Impl
	rule__Cardinality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinalityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getCardinalityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinality__Group__1__Impl
	rule__Cardinality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinalityAccess().getStartAssignment_1()); }
	(rule__Cardinality__StartAssignment_1)
	{ after(grammarAccess.getCardinalityAccess().getStartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinality__Group__2__Impl
	rule__Cardinality__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2()); }
	'..'
	{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinality__Group__3__Impl
	rule__Cardinality__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinalityAccess().getStopAssignment_3()); }
	(rule__Cardinality__StopAssignment_3)
	{ after(grammarAccess.getCardinalityAccess().getStopAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinality__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinalityAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getCardinalityAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardVal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_0__0__Impl
	rule__CardVal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getCardVal0Action_0_0()); }
	()
	{ after(grammarAccess.getCardValAccess().getCardVal0Action_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getDigitZeroKeyword_0_1()); }
	'0'
	{ after(grammarAccess.getCardValAccess().getDigitZeroKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardVal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_1__0__Impl
	rule__CardVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getCardVal1Action_1_0()); }
	()
	{ after(grammarAccess.getCardValAccess().getCardVal1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getDigitOneKeyword_1_1()); }
	'1'
	{ after(grammarAccess.getCardValAccess().getDigitOneKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardVal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_2__0__Impl
	rule__CardVal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getCardValNAction_2_0()); }
	()
	{ after(grammarAccess.getCardValAccess().getCardValNAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardVal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardVal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardValAccess().getAsteriskKeyword_2_1()); }
	'*'
	{ after(grammarAccess.getCardValAccess().getAsteriskKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__0__Impl
	rule__Language__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }
	'language'
	{ after(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__1__Impl
	rule__Language__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
	(rule__Language__NameAssignment_1)
	{ after(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Language__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageAccess().getDependenciesAssignment_2()); }
	(rule__Language__DependenciesAssignment_2)*
	{ after(grammarAccess.getLanguageAccess().getDependenciesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageDependency__Group__0__Impl
	rule__LanguageDependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageDependencyAccess().getNameAssignment_0()); }
	(rule__LanguageDependency__NameAssignment_0)
	{ after(grammarAccess.getLanguageDependencyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageDependency__Group__1__Impl
	rule__LanguageDependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageDependencyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLanguageDependencyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageDependency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageDependencyAccess().getTypeAssignment_2()); }
	(rule__LanguageDependency__TypeAssignment_2)
	{ after(grammarAccess.getLanguageDependencyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifact__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__0__Impl
	rule__Artifact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getArtifactKeyword_0()); }
	'artifact'
	{ after(grammarAccess.getArtifactAccess().getArtifactKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__1__Impl
	rule__Artifact__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getNameAssignment_1()); }
	(rule__Artifact__NameAssignment_1)
	{ after(grammarAccess.getArtifactAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__2__Impl
	rule__Artifact__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getArtifactAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__3__Impl
	rule__Artifact__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getTypeAssignment_3()); }
	(rule__Artifact__TypeAssignment_3)
	{ after(grammarAccess.getArtifactAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getGroup_4()); }
	(rule__Artifact__Group_4__0)?
	{ after(grammarAccess.getArtifactAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifact__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group_4__0__Impl
	rule__Artifact__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getArtifactAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group_4__1__Impl
	rule__Artifact__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getParametersAssignment_4_1()); }
	(rule__Artifact__ParametersAssignment_4_1)*
	{ after(grammarAccess.getArtifactAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Artifact__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactAccess().getRightSquareBracketKeyword_4_2()); }
	']'
	{ after(grammarAccess.getArtifactAccess().getRightSquareBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactParameter__Group__0__Impl
	rule__ArtifactParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactParameterAccess().getNameAssignment_0()); }
	(rule__ArtifactParameter__NameAssignment_0)
	{ after(grammarAccess.getArtifactParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactParameter__Group__1__Impl
	rule__ArtifactParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactParameterAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getArtifactParameterAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactParameterAccess().getArtifactAssignment_2()); }
	(rule__ArtifactParameter__ArtifactAssignment_2)
	{ after(grammarAccess.getArtifactParameterAccess().getArtifactAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionKeyword_0()); }
	'composition'
	{ after(grammarAccess.getCompositionAccess().getCompositionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getNameAssignment_1()); }
	(rule__Composition__NameAssignment_1)
	{ after(grammarAccess.getCompositionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getCompositionAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
	rule__Composition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getOperationAssignment_3()); }
	(rule__Composition__OperationAssignment_3)
	{ after(grammarAccess.getCompositionAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__4__Impl
	rule__Composition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getActivationKeyword_4()); }
	'activation'
	{ after(grammarAccess.getCompositionAccess().getActivationKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__5__Impl
	rule__Composition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getCompositionAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__6__Impl
	rule__Composition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getActivationAssignment_6()); }
	(rule__Composition__ActivationAssignment_6)
	{ after(grammarAccess.getCompositionAccess().getActivationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__7__Impl
	rule__Composition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_7()); }
	'['
	{ after(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__8__Impl
	rule__Composition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getParametersAssignment_8()); }
	(rule__Composition__ParametersAssignment_8)*
	{ after(grammarAccess.getCompositionAccess().getParametersAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_9()); }
	']'
	{ after(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionParameter__Group__0__Impl
	rule__CompositionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionParameterAccess().getNameAssignment_0()); }
	(rule__CompositionParameter__NameAssignment_0)
	{ after(grammarAccess.getCompositionParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionParameter__Group__1__Impl
	rule__CompositionParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionParameterAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getCompositionParameterAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionParameterAccess().getArtifactAssignment_2()); }
	(rule__CompositionParameter__ArtifactAssignment_2)
	{ after(grammarAccess.getCompositionParameterAccess().getArtifactAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LanguagesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_2_0_0()); }
		ruleLanguage
		{ after(grammarAccess.getModelAccess().getLanguagesLanguageParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OperationsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_2_1_0()); }
		ruleOperation
		{ after(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ArtifactsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getArtifactsArtifactParserRuleCall_2_2_0()); }
		ruleArtifact
		{ after(grammarAccess.getModelAccess().getArtifactsArtifactParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CompositionsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCompositionsCompositionParserRuleCall_2_3_0()); }
		ruleComposition
		{ after(grammarAccess.getModelAccess().getCompositionsCompositionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FeatureModelsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFeatureModelsFeatureModelParserRuleCall_2_4_0()); }
		ruleFeatureModel
		{ after(grammarAccess.getModelAccess().getFeatureModelsFeatureModelParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureModel__FeatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureModelAccess().getFeatureFeatureParserRuleCall_2_0()); }
		ruleFeature
		{ after(grammarAccess.getFeatureModelAccess().getFeatureFeatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getAtomicFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getAtomicFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getAtomicFeatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicFeatureAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicFeatureAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicFeature__ConstraintsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicFeatureAccess().getConstraintsPropositionParserRuleCall_4_1_0()); }
		ruleProposition
		{ after(grammarAccess.getAtomicFeatureAccess().getConstraintsPropositionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getOneOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getOneOfAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__ChildrenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getChildrenFeatureParserRuleCall_5_0()); }
		ruleFeature
		{ after(grammarAccess.getOneOfAccess().getChildrenFeatureParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OneOf__ConstraintsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOneOfAccess().getConstraintsPropositionParserRuleCall_7_1_0()); }
		ruleProposition
		{ after(grammarAccess.getOneOfAccess().getConstraintsPropositionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getSomeOfAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSomeOfAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__ChildrenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getChildrenFeatureParserRuleCall_5_0()); }
		ruleFeature
		{ after(grammarAccess.getSomeOfAccess().getChildrenFeatureParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeOf__ConstraintsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSomeOfAccess().getConstraintsPropositionParserRuleCall_7_1_0()); }
		ruleProposition
		{ after(grammarAccess.getSomeOfAccess().getConstraintsPropositionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquivAccess().getRightImplyParserRuleCall_1_2_0()); }
		ruleImply
		{ after(grammarAccess.getEquivAccess().getRightImplyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imply__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplyAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getImplyAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NextAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNextPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getNextPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__RefAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getRefFeatureCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getRefFeatureIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getRefFeatureIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getRefFeatureCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__InputsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getInputsOperationParameterParserRuleCall_3_0()); }
		ruleOperationParameter
		{ after(grammarAccess.getOperationAccess().getInputsOperationParameterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OutputAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOutputOperationParameterParserRuleCall_5_0()); }
		ruleOperationParameter
		{ after(grammarAccess.getOperationAccess().getOutputOperationParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterAccess().getTypeLanguageCrossReference_2_0()); }
		(
			{ before(grammarAccess.getOperationParameterAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperationParameterAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getOperationParameterAccess().getTypeLanguageCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__CardinalityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterAccess().getCardinalityCardinalityParserRuleCall_3_0()); }
		ruleCardinality
		{ after(grammarAccess.getOperationParameterAccess().getCardinalityCardinalityParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__StartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityAccess().getStartCardValParserRuleCall_1_0()); }
		ruleCardVal
		{ after(grammarAccess.getCardinalityAccess().getStartCardValParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__StopAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityAccess().getStopCardValParserRuleCall_3_0()); }
		ruleCardVal
		{ after(grammarAccess.getCardinalityAccess().getStopCardValParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__DependenciesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getDependenciesLanguageDependencyParserRuleCall_2_0()); }
		ruleLanguageDependency
		{ after(grammarAccess.getLanguageAccess().getDependenciesLanguageDependencyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageDependencyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageDependencyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDependency__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageDependencyAccess().getTypeLanguageCrossReference_2_0()); }
		(
			{ before(grammarAccess.getLanguageDependencyAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLanguageDependencyAccess().getTypeLanguageIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getLanguageDependencyAccess().getTypeLanguageCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArtifactAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactAccess().getTypeLanguageCrossReference_3_0()); }
		(
			{ before(grammarAccess.getArtifactAccess().getTypeLanguageIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArtifactAccess().getTypeLanguageIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getArtifactAccess().getTypeLanguageCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Artifact__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactAccess().getParametersArtifactParameterParserRuleCall_4_1_0()); }
		ruleArtifactParameter
		{ after(grammarAccess.getArtifactAccess().getParametersArtifactParameterParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactParameterAccess().getNameLanguageDependencyCrossReference_0_0()); }
		(
			{ before(grammarAccess.getArtifactParameterAccess().getNameLanguageDependencyIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArtifactParameterAccess().getNameLanguageDependencyIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getArtifactParameterAccess().getNameLanguageDependencyCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactParameter__ArtifactAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactParameterAccess().getArtifactReferentiableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getArtifactParameterAccess().getArtifactReferentiableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArtifactParameterAccess().getArtifactReferentiableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getArtifactParameterAccess().getArtifactReferentiableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getOperationOperationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCompositionAccess().getOperationOperationIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionAccess().getOperationOperationIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCompositionAccess().getOperationOperationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ActivationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getActivationPropositionParserRuleCall_6_0()); }
		ruleProposition
		{ after(grammarAccess.getCompositionAccess().getActivationPropositionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ParametersAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getParametersCompositionParameterParserRuleCall_8_0()); }
		ruleCompositionParameter
		{ after(grammarAccess.getCompositionAccess().getParametersCompositionParameterParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionParameterAccess().getNameOperationParameterCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCompositionParameterAccess().getNameOperationParameterIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionParameterAccess().getNameOperationParameterIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCompositionParameterAccess().getNameOperationParameterCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionParameter__ArtifactAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionParameterAccess().getArtifactReferentiableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCompositionParameterAccess().getArtifactReferentiableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionParameterAccess().getArtifactReferentiableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCompositionParameterAccess().getArtifactReferentiableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
