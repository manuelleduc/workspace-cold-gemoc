/*
 * generated by Xtext 2.10.0
 */
package fr.mleduc.formatting2

import com.google.inject.Inject
import fr.mleduc.mMLang.Class
import fr.mleduc.mMLang.Field
import fr.mleduc.mMLang.Generic
import fr.mleduc.mMLang.Metamodel
import fr.mleduc.services.MMLangGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class MMLangFormatter extends AbstractFormatter2 {
	
	@Inject extension MMLangGrammarAccess

	def dispatch void format(Metamodel metamodel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (Composition composition : metamodel.getComposition()) {
//			composition.format;
//		}
		for (Class classes : metamodel.getClasses()) {
			classes.format;
		}
	}

	def dispatch void format(Class _class, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Class parents : _class.getParents()) {
			parents.format;
		}
		for (Generic generics : _class.getGenerics()) {
			generics.format;
		}
		for (Field fields : _class.getFields()) {
			fields.format;
		}
	}
	
	// TODO: implement for Merge
}
