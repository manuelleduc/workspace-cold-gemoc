/*
 * generated by Xtext 2.10.0
 */
grammar InternalMLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.mleduc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.mleduc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.mleduc.services.MLangGrammarAccess;

}
@parser::members {
	private MLangGrammarAccess grammarAccess;

	public void setGrammarAccess(MLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstance
entryRuleInstance
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceAccess().getGroup()); }
		(rule__Instance__Group__0)
		{ after(grammarAccess.getInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getGroup_0()); }
		(rule__Value__Group_0__0)
		{ after(grammarAccess.getValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_1()); }
		(rule__Value__Group_1__0)
		{ after(grammarAccess.getValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_2()); }
		(rule__Value__Group_2__0)
		{ after(grammarAccess.getValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_3()); }
		(rule__Value__Group_3__0)
		{ after(grammarAccess.getValueAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_4()); }
		(rule__Value__Group_4__0)
		{ after(grammarAccess.getValueAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_5()); }
		(rule__Value__Group_5__0)
		{ after(grammarAccess.getValueAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMetamodelKeyword_2()); }
	'metamodel'
	{ after(grammarAccess.getModelAccess().getMetamodelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
	(rule__Model__MetamodelAssignment_3)
	{ after(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getInstancesAssignment_4()); }
	(rule__Model__InstancesAssignment_4)*
	{ after(grammarAccess.getModelAccess().getInstancesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }
	'instance'
	{ after(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getNameAssignment_1()); }
	(rule__Instance__NameAssignment_1)
	{ after(grammarAccess.getInstanceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__2__Impl
	rule__Instance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInstanceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__3__Impl
	rule__Instance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getTypeAssignment_3()); }
	(rule__Instance__TypeAssignment_3)
	{ after(grammarAccess.getInstanceAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__4__Impl
	rule__Instance__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__5__Impl
	rule__Instance__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getFieldsAssignment_5()); }
	(rule__Instance__FieldsAssignment_5)*
	{ after(grammarAccess.getInstanceAccess().getFieldsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getKeyAssignment_0()); }
	(rule__Field__KeyAssignment_0)
	{ after(grammarAccess.getFieldAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFieldAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getValueAssignment_2()); }
	(rule__Field__ValueAssignment_2)
	{ after(grammarAccess.getFieldAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getFreeValAction_0_0()); }
	()
	{ after(grammarAccess.getValueAccess().getFreeValAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_0_1()); }
	(rule__Value__ValAssignment_0_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getStringValAction_1_0()); }
	()
	{ after(grammarAccess.getValueAccess().getStringValAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_1_1()); }
	(rule__Value__ValAssignment_1_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_2__0__Impl
	rule__Value__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getIntValAction_2_0()); }
	()
	{ after(grammarAccess.getValueAccess().getIntValAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_2_1()); }
	(rule__Value__ValAssignment_2_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__0__Impl
	rule__Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getInstanceValAction_3_0()); }
	()
	{ after(grammarAccess.getValueAccess().getInstanceValAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getRefAssignment_3_1()); }
	(rule__Value__RefAssignment_3_1)
	{ after(grammarAccess.getValueAccess().getRefAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_4__0__Impl
	rule__Value__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getListValAction_4_0()); }
	()
	{ after(grammarAccess.getValueAccess().getListValAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_4__1__Impl
	rule__Value__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getValueAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_4__2__Impl
	rule__Value__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValsAssignment_4_2()); }
	(rule__Value__ValsAssignment_4_2)*
	{ after(grammarAccess.getValueAccess().getValsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getRightSquareBracketKeyword_4_3()); }
	']'
	{ after(grammarAccess.getValueAccess().getRightSquareBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_5__0__Impl
	rule__Value__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getSetValAction_5_0()); }
	()
	{ after(grammarAccess.getValueAccess().getSetValAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_5__1__Impl
	rule__Value__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getValueAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_5__2__Impl
	rule__Value__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValsAssignment_5_2()); }
	(rule__Value__ValsAssignment_5_2)*
	{ after(grammarAccess.getValueAccess().getValsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getValueAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMetamodelMetamodelCrossReference_3_0()); }
		(
			{ before(grammarAccess.getModelAccess().getMetamodelMetamodelIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModelAccess().getMetamodelMetamodelIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getModelAccess().getMetamodelMetamodelCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__InstancesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInstancesInstanceParserRuleCall_4_0()); }
		ruleInstance
		{ after(grammarAccess.getModelAccess().getInstancesInstanceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getTypeClassCrossReference_3_0()); }
		(
			{ before(grammarAccess.getInstanceAccess().getTypeClassIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstanceAccess().getTypeClassIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getInstanceAccess().getTypeClassCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__FieldsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getFieldsFieldParserRuleCall_5_0()); }
		ruleField
		{ after(grammarAccess.getInstanceAccess().getFieldsFieldParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getKeyFieldCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getKeyFieldIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldAccess().getKeyFieldIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getKeyFieldCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getFieldAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValANY_OTHERTerminalRuleCall_0_1_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getValueAccess().getValANY_OTHERTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getValSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getValINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__RefAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getRefInstanceCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getValueAccess().getRefInstanceIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueAccess().getRefInstanceIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getValueAccess().getRefInstanceCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValsValueParserRuleCall_4_2_0()); }
		ruleValue
		{ after(grammarAccess.getValueAccess().getValsValueParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValsValueParserRuleCall_5_2_0()); }
		ruleValue
		{ after(grammarAccess.getValueAccess().getValsValueParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
